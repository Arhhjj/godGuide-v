{"version":3,"sources":["assets\\scripts\\common\\cmpt\\ui\\CountdownLabel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Tool from \"../../util/Tool\";\r\nimport { SCALE_TWEEN, Tween } from \"../../util/Tween\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\ntype CountdownFormat = string | { \"S\": string; \"M\": string; \"H\": string; \"D\": string };\r\n\r\n/**\r\n * 倒计时显示组件\r\n */\r\n@ccclass\r\n@menu(\"Framework/UI组件/CountdownLabel\")\r\nexport default class CountdownLabel extends cc.Component {\r\n    @property({\r\n        tooltip: CC_DEV && \"倒计时是否受到timeScale的影响\"\r\n    })\r\n    public timeScale: boolean = false;\r\n\r\n    private _tween: Tween<this> = null;\r\n    private _updateCall: () => void = null;\r\n    private _completeCall: () => void = null;\r\n\r\n    /** 格式化参数，详见`Tool.formatTimeString` */\r\n    private _format: CountdownFormat = \"%{hh}:%{mm}:%{ss}\";\r\n    /** 剩余秒数 */\r\n    private _leftSec: number = 0;\r\n    public get leftSec(): number { return this._leftSec; }\r\n    private _leftFloorSec: number = 0;\r\n\r\n    private _label: cc.Label | cc.RichText = null;\r\n    public get label(): cc.Label | cc.RichText {\r\n        if (!this._label) {\r\n            this._label = this.getComponent(cc.Label) ?? this.getComponent(cc.RichText);\r\n        }\r\n        return this._label;\r\n    }\r\n\r\n    public startCountdown(sec: number, format: CountdownFormat = \"%{hh}:%{mm}:%{ss}\", updateCall: () => void = null, completeCall: () => void = null): void {\r\n        this._leftSec = sec;\r\n        this._leftFloorSec = Math.floor(sec);\r\n        this._format = format;\r\n        this._updateCall = updateCall;\r\n        this._completeCall = completeCall;\r\n        this._tween?.stop();\r\n        this._tween = this.timeScale ? new Tween(this, SCALE_TWEEN) : new Tween(this);\r\n        this._tween.to({ _leftSec: 0 }, sec * 1000)\r\n            .onUpdate(() => {\r\n                this.onUpdate();\r\n            })\r\n            .onComplete(() => {\r\n                this.onComplete();\r\n            })\r\n            .start();\r\n    }\r\n\r\n    private onUpdate(): void {\r\n        // 每隔1s更新一次\r\n        let floorSec = Math.floor(this._leftSec);\r\n        if (floorSec === this._leftFloorSec) {\r\n            return;\r\n        }\r\n\r\n        // 更新文本显示\r\n        this._leftFloorSec = floorSec;\r\n        if (this.label) {\r\n            this.label.string = Tool.formatTimeString(this._leftFloorSec, this._format);\r\n        }\r\n\r\n        // 更新回调\r\n        this._updateCall?.();\r\n    }\r\n\r\n    private onComplete(): void {\r\n        this._completeCall?.();\r\n    }\r\n}\r\n"]}