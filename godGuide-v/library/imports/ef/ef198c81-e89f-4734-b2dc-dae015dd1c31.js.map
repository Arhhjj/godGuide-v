{"version":3,"sources":["assets\\scripts\\showcase\\home\\guide\\GodGuide.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { EventName } from \"../../../common/const/EventName\";\r\nimport Events, { preloadEvent } from \"../../../common/util/Events\";\r\nimport Res from \"../../../common/util/Res\";\r\nimport guideTasks from \"./task/GuideTaskIndex\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n// declare let require: (string) => any;\r\n// let async = require('async');\r\n\r\nimport * as async from 'async'\r\n\r\n@ccclass\r\nexport class GodGuide extends cc.Component {\r\n\r\n    /**手指预制件 */\r\n    @property(cc.Prefab) fingerPrefab: cc.Prefab = null\r\n\r\n    private _finger: cc.Node = null\r\n    private _mask: cc.Mask = null\r\n    private _targetNode: any = null//引导的目标（也就是要引导玩家操作的目标）\r\n\r\n    onLoad() {\r\n        Events.targetOn(this)\r\n\r\n        if (this.fingerPrefab) {\r\n            /**若要进行资源引用计数管理 应使用Res中的instantiate进行加载 */\r\n\r\n            this._finger = cc.instantiate(this.fingerPrefab)\r\n            this._finger.parent = this.node\r\n            this._finger.active = false\r\n            //this._finger.getComponent(\"GuideFinger\").stopAnim() //手指可以挂一些动画脚本\r\n        }\r\n\r\n        this.node.setContentSize(cc.winSize)\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.addSetSwallowTouchesEventListener, this)\r\n\r\n        this._mask = this.node.getComponentInChildren(cc.Mask)\r\n        this._mask.node.active = false //mask遮挡面板默认不开启，只有在引导时在开启\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        Events.targetOff(this)\r\n    }\r\n\r\n    /**\r\n     * 由事件进行派发的引导处理\r\n     * @param data \r\n     */\r\n    @preloadEvent(EventName.EXCUTE_GUIDE_TASK)\r\n    excuteGuideTask(data) {\r\n        console.log(\"接收的引导数据\", data);\r\n        this._mask.node.active = true;  //引导前开启遮挡面板\r\n\r\n        let flie = guideTasks[`${data}`]\r\n        let task = flie.task\r\n\r\n        this._targetNode = null; //每次引导执行前，都将之前的引导目标清空\r\n\r\n        async.eachSeries(task.steps, (step, cb) => {\r\n            this._processStep(step, cb)\r\n        }, () => {\r\n            this._mask._graphics.clear();\r\n            this._mask.node.active = false;//关闭遮挡面板\r\n            this._finger.active = false;\r\n        })\r\n\r\n    }\r\n\r\n    /**执行引导步骤 */\r\n    _processStep(step, callback) {\r\n        //调用async.series来执行引导的步骤\r\n        async.series({\r\n            stepStart(markonCb) {\r\n                if (step.onStart) {\r\n                    step.onStart(() => {\r\n                        markonCb();\r\n                    });\r\n                } else {\r\n                    markonCb();\r\n                }\r\n            },\r\n            stepExcute: (markonCb) => {\r\n                if (step.onExcute) {\r\n                    step.onExcute(() => {\r\n                        this.scheduleOnce(() => {\r\n                            let cmd = GodGuide[step.command.cmd];\r\n                            if (cmd) {\r\n                                cmd(this, step, (error) => {\r\n                                    markonCb(error);\r\n                                });\r\n                            }\r\n                        }, step.delayTime || 0);\r\n                    });\r\n                } else {\r\n                    markonCb();\r\n                }\r\n            },\r\n            stepEnd: (markonCb) => {\r\n                if (step.onEnd) {\r\n                    step.onEnd(() => {\r\n                        markonCb();\r\n                    });\r\n                } else {\r\n                    markonCb();\r\n                }\r\n            },\r\n        },\r\n            (error, result) => {\r\n                if (error) {\r\n                    //如果存在意外终止 doSomething。。。。\r\n                    return\r\n                }\r\n                //引导执行完毕\r\n                callback()\r\n            })\r\n\r\n    }\r\n\r\n    /**\r\n     * 事件的吞没处理机制\r\n     */\r\n    addSetSwallowTouchesEventListener(event) {\r\n        if (!this._mask.node.active) {\r\n            this.node._touchListener.setSwallowTouches(false);\r\n            return;\r\n        }\r\n        if (!this._targetNode) {\r\n            this.node._touchListener.setSwallowTouches(true);\r\n            return;\r\n        }\r\n        if (!cc.isValid(this._targetNode)) {\r\n            return;\r\n        }\r\n        let rect = this._targetNode.getBoundingBoxToWorld();\r\n        if (rect.contains(event.getLocation())) {\r\n            //如果玩家点击了规定的区域，则让事件往下派发\r\n            this.node._touchListener.setSwallowTouches(false);\r\n        } else {\r\n            this.node._touchListener.setSwallowTouches(true);\r\n        }\r\n    }\r\n\r\n    static movefinger(guideTaskMgr: GodGuide, step, callback) {\r\n        let params = step.command;\r\n        guideTaskMgr._targetNode = null; //先置空之前查找的目标节点\r\n\r\n        //开始查找新的目标节点\r\n        guideTaskMgr.find(params.args, (node, rect) => {\r\n\r\n            //查找到之后并且聚焦过去\r\n            guideTaskMgr.fingerToNode(node, () => {\r\n\r\n                guideTaskMgr._targetNode = node; //赋值新的查找到的目标节点\r\n\r\n                node.once(cc.Node.EventType.TOUCH_END, () => {\r\n                    callback();\r\n                    console.log(\"点击目标节点成功\")\r\n                });\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    //******************工具集函数********************* */\r\n\r\n    /**\r\n     * 查找节点\r\n     * @param value \r\n     * @param cb \r\n     */\r\n    private find(value, cb?) {\r\n        let root = cc.find('Canvas');\r\n        // let root = this.node.parent\r\n\r\n        this.locateNode(root, value, (error, node) => {\r\n            if (error) {\r\n                console.log(\"查找节点失败\", value)\r\n                return;\r\n            }\r\n            let rect = this._focusToNode(node);\r\n            if (cb) {\r\n                console.log(\"查找节点成功\", value)\r\n                cb(node, rect);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n    * 路径特殊字符使用正则表达式进行拆分\r\n    * @param locator 查询的路径配置，形如：'bottom/bag/bagContent/casting',\r\n    */\r\n    private parse(locator) {\r\n        let names = locator.split(/[.,//,>,#]/g);\r\n        let segments = names.map(function (name) {\r\n            let index = locator.indexOf(name);\r\n            let symbol = locator[index - 1] || '/';\r\n            return { symbol: symbol, name: name.trim() };\r\n        });\r\n        return segments;\r\n    }\r\n\r\n\r\n    /**\r\n    * 根据查找路径和根节点定位要查找的目标节点\r\n    * @param root \r\n    * @param locator \r\n    * @param cb \r\n    */\r\n    private locateNode(root, locator, cb?) {\r\n        let segments = this.parse(locator);\r\n        let child = null, node = root;\r\n\r\n        for (let i = 0; i < segments.length; i++) {\r\n            let item = segments[i];\r\n            switch (item.symbol) {\r\n                case '/':\r\n                    child = node.getChildByName(item.name);\r\n                    break;\r\n            }\r\n            if (!child) {\r\n                node = null;\r\n                break;\r\n            }\r\n            node = child;\r\n        }\r\n        if (node && node.active && cb) {\r\n            cb(null, node);\r\n        } else {\r\n            cb(locator)\r\n        }\r\n        return node;\r\n    }\r\n\r\n\r\n    /**\r\n     * 聚焦到目标节点并绘制图形\r\n     * @param node 查找的节点\r\n     */\r\n    _focusToNode(node: cc.Node) {\r\n        this._mask._graphics.clear();\r\n\r\n        let rect = node.getBoundingBoxToWorld();\r\n        let p = this.node.convertToNodeSpaceAR(rect.origin);\r\n        rect.x = p.x;\r\n        rect.y = p.y;\r\n        this._mask._graphics.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n        return rect;\r\n    }\r\n\r\n\r\n    /**\r\n     * 移动手指到目标节点\r\n     * @param node \r\n     * @param markonCb \r\n     */\r\n    fingerToNode(node, markonCb) {\r\n        if (!this._finger) {\r\n            markonCb();\r\n        }\r\n        this._finger.active = true;\r\n        this._finger.stopAllActions();\r\n        let p = this.node.convertToNodeSpaceAR(node.parent.convertToWorldSpaceAR(node.position));\r\n        this._finger.setPosition(cc.v3(p.x + 100, p.y));\r\n        //this._finger.getComponent(\"GuideFinger\").playAnim(); //手指可以挂一些动画脚本，用来控制动画播放\r\n        markonCb();\r\n    }\r\n\r\n\r\n}"]}