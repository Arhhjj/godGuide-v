{"version":3,"sources":["assets\\scripts\\common\\cmpt\\shader\\ShaderOutline.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAmE,EAAE,CAAC,UAAU,EAA9E,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA,EAAE,iBAAiB,uBAAkB,CAAC;AAEvF,IAAK,WAMJ;AAND,WAAK,WAAW;IACZ,6CAAQ,CAAA;IACR,UAAU;IACV,2CAAO,CAAA;IACP,UAAU;IACV,+CAAS,CAAA;AACb,CAAC,EANI,WAAW,KAAX,WAAW,QAMf;AAMD;IAA2C,iCAAY;IAAvD;QAAA,qEAgCC;QA9BU,kBAAY,GAAa,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;QAExC,kBAAY,GAAW,CAAC,CAAC;QAEzB,iBAAW,GAAgB,WAAW,CAAC,IAAI,CAAC;QAE5C,iBAAW,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAExC,UAAI,GAAgB,IAAI,CAAC;;IAsBrC,CAAC;IArBG,sBAAW,8BAAG;aAAd;YACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpE;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAES,6BAAK,GAAf;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,8BAAM,GAAhB;QACI,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEM,oCAAY,GAAnB;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3I,CAAC;IA7BD;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;uDACO;IAE/C;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;uDACR;IAEhC;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;sDACjB;IAEnD;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;sDACQ;IAR/B,aAAa;QAJjC,OAAO;QACP,gBAAgB;QAChB,iBAAiB;QACjB,IAAI,CAAC,gCAAgC,CAAC;OAClB,aAAa,CAgCjC;IAAD,oBAAC;CAhCD,AAgCC,CAhC0C,EAAE,CAAC,SAAS,GAgCtD;kBAhCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, menu, disallowMultiple, executeInEditMode } = cc._decorator;\r\n\r\nenum OutlineType {\r\n    NONE = 0,\r\n    /** 外描边 */\r\n    OUT = 1,\r\n    /** 内描边 */\r\n    INNER = 2,\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple\r\n@executeInEditMode\r\n@menu(\"Framework/Shader/ShaderOutline\")\r\nexport default class ShaderOutline extends cc.Component {\r\n    @property({ tooltip: CC_DEV && \"描边颜色\" })\r\n    public outlineColor: cc.Color = new cc.Color();\r\n    @property({ tooltip: CC_DEV && \"描边宽度\" })\r\n    public outLineWidth: number = 0;\r\n    @property({ type: cc.Enum(OutlineType), tooltip: CC_DEV && \"描边类型\" })\r\n    public outlineType: OutlineType = OutlineType.NONE;\r\n    @property({ tooltip: CC_DEV && \"纹理大小\" })\r\n    public textureSize: cc.Size = new cc.Size(1, 1);\r\n\r\n    private _mat: cc.Material = null;\r\n    public get mat(): cc.Material {\r\n        if (!this._mat) {\r\n            this._mat = this.getComponent(cc.RenderComponent).getMaterial(0);\r\n        }\r\n        return this._mat;\r\n    }\r\n\r\n    protected start(): void {\r\n        this.updateShader();\r\n    }\r\n\r\n    protected update(): void {\r\n        if (CC_EDITOR) {\r\n            this.updateShader();\r\n        }\r\n    }\r\n\r\n    public updateShader(): void {\r\n        this.mat.setProperty(\"outlineColor\", this.outlineColor);\r\n        this.mat.setProperty(\"outlineInfo\", new cc.Vec4(this.textureSize.width, this.textureSize.height, this.outLineWidth, this.outlineType));\r\n    }\r\n}\r\n"]}