{"version":3,"sources":["assets\\scripts\\common\\cmpt\\base\\DialogBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import EditorTool from \"../../util/EditorTool\";\r\nimport Tool from \"../../util/Tool\";\r\n\r\nconst { ccclass, property, disallowMultiple, menu } = cc._decorator;\r\n\r\n/**\r\n * 弹窗基类\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@menu(\"Framework/基础组件/DialogBase\")\r\nexport default class DialogBase extends cc.Component {\r\n    /** 弹窗prefab路径，规则同Res加载路径 */\r\n    public static pUrl: string = \"\";\r\n\r\n    @property(cc.Animation)\r\n    protected dlgAnim: cc.Animation = null;\r\n\r\n    @property({\r\n        type: cc.AnimationClip,\r\n        tooltip: CC_DEV && \"打开弹窗的动画\",\r\n        visible() { return !!this.dlgAnim; }\r\n    })\r\n    protected openClip: cc.AnimationClip = null;\r\n\r\n    @property({\r\n        type: cc.AnimationClip,\r\n        tooltip: CC_DEV && \"关闭弹窗的动画\",\r\n        visible() { return !!this.dlgAnim; }\r\n    })\r\n    protected closeClip: cc.AnimationClip = null;\r\n\r\n    /** 外部的resolve函数，在弹窗close时调用 */\r\n    private _resolveList: Array<(value?: any) => void> = [];\r\n\r\n    private _prefabUrl: string = \"\";\r\n    /** 弹窗prefab路径，规则同Res加载路径 */\r\n    public get prefabUrl(): string { return this._prefabUrl; }\r\n\r\n    protected onLoad(): void {\r\n        if (this.dlgAnim) {\r\n            this.openClip && this.dlgAnim.addClip(this.openClip);\r\n            this.closeClip && this.dlgAnim.addClip(this.closeClip);\r\n            this.dlgAnim.on(cc.Animation.EventType.FINISHED, this.onAnimFinished, this);\r\n        }\r\n    }\r\n\r\n    protected resetInEditor(): void {\r\n        if (!CC_EDITOR) {\r\n            return;\r\n        }\r\n        // 动画\r\n        for (let i = 0; i < this.node.childrenCount; i++) {\r\n            let anim: cc.Animation = this.node.children[i].getComponent(cc.Animation);\r\n            if (anim) {\r\n                this.dlgAnim = anim;\r\n                EditorTool.load<cc.AnimationClip>(\"res/animation/dialog/open.anim\").then((v) => { this.openClip = v; });\r\n                EditorTool.load<cc.AnimationClip>(\"res/animation/dialog/close.anim\").then((v) => { this.closeClip = v; });\r\n                break;\r\n            }\r\n        }\r\n        // 触摸拦截\r\n        if (this.node.childrenCount <= 0 || !this.node.children[0].getComponent(cc.BlockInputEvents)) {\r\n            let block = new cc.Node(\"Block\");\r\n            this.node.addChild(block);\r\n            block.setSiblingIndex(0);\r\n            block.setContentSize(this.node.getContentSize());\r\n            block.addComponent(cc.BlockInputEvents);\r\n            let widget = block.addComponent(cc.Widget);\r\n            widget.isAlignTop = true;\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n        }\r\n    }\r\n\r\n    protected onAnimFinished(): void {\r\n        if (this.dlgAnim.currentClip === this.closeClip) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开动画\r\n     */\r\n    public playOpen(): void {\r\n        if (this.dlgAnim && this.openClip) {\r\n            this.dlgAnim.play(this.openClip.name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭动画，动画结束回调中会调用close销毁\r\n     */\r\n    public playClose(): void {\r\n        if (this.dlgAnim && this.closeClip) {\r\n            if (this.dlgAnim.getAnimationState(this.closeClip.name).isPlaying) {\r\n                return;\r\n            }\r\n            this.dlgAnim.play(this.closeClip.name);\r\n        } else {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开弹窗时的处理\r\n     * @virtual\r\n     */\r\n    public onOpen(...args: any[]): void {\r\n    }\r\n\r\n    /**\r\n     * 关闭弹窗时的处理\r\n     * @virtual\r\n     */\r\n    public onClose(): void {\r\n    }\r\n\r\n    /**\r\n     * 销毁弹窗节点时的处理。\r\n     * - 必须使用此接口销毁，子类重写时请调用super.close()\r\n     * @virtual\r\n     */\r\n    public close(): void {\r\n        this.onClose();\r\n        this._resolveList.forEach((resolve) => { resolve(); });\r\n        this.node.removeFromParent();\r\n        this.node.destroy();\r\n    }\r\n\r\n    /**\r\n     * 关闭按钮回调\r\n     * @virtual\r\n     */\r\n    protected onClickClose(): void {\r\n        this.playClose();\r\n    }\r\n\r\n    /**\r\n     * 添加外部resolve函数，在弹窗close时调用\r\n     */\r\n    public addResolve(resolve: (value?: any) => void): void {\r\n        Tool.arrayAdd(this._resolveList, resolve);\r\n    }\r\n}\r\n"]}