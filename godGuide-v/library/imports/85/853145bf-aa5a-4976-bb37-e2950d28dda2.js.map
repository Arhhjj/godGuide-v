{"version":3,"sources":["assets\\scripts\\showcase\\home\\Card\\MoveCtr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ResSprite from \"../../../common/cmpt/ui/res/ResSprite\";\r\nimport { DirUrl } from \"../../../common/const/Url\";\r\nimport Tool from \"../../../common/util/Tool\";\r\n\r\n/**移动控制 */\r\nexport default class MoveCtr {\r\n    private targetNode: cc.Node = null;\r\n    private targetShow: cc.Node = null;\r\n\r\n    private _moveSpeed: number = 1500; // 运动速度\r\n    private _maxWidth: number = 1300;\r\n    private _maxHeight: number = 0;\r\n    private _minWidth: number = -1300;\r\n    private _minHeight: number = 0;\r\n\r\n    private moveDirection: cc.Vec2 = cc.v2(1, 0); // 初始运动方向向右\r\n\r\n    private _targetID: number = null\r\n    public get targetID() { return this._targetID }\r\n\r\n    constructor(targetNode: cc.Node, targetShow: cc.Node) {\r\n        this.targetNode = targetNode;\r\n        this.targetShow = targetShow;\r\n        this.randomID();\r\n    }\r\n\r\n    randomID() {\r\n        this._targetID = Tool.randInt(1, 6)\r\n        const resSprite = this.targetNode.getComponent(ResSprite) ?? this.targetNode.addComponent(ResSprite)\r\n        resSprite.setSpriteFrame(DirUrl.TEXTURE + \"home/barrier/\" + this._targetID)\r\n\r\n        const resSpriteShow = this.targetShow.getComponent(ResSprite) ?? this.targetShow.addComponent(ResSprite)\r\n        resSpriteShow.setSpriteFrame(DirUrl.TEXTURE + \"home/barrier/\" + this._targetID)\r\n    }\r\n\r\n    startMoving() {\r\n        const schedule = cc.director.getScheduler();\r\n        schedule.enableForTarget(this);\r\n        schedule.schedule(this.updateMove, this, 0);\r\n    }\r\n\r\n    stopMoving() {\r\n        const schedule = cc.director.getScheduler();\r\n        schedule.unschedule(this.updateMove, this);\r\n    }\r\n\r\n    private updateMove(dt: number): void {\r\n        this.targetNode.x += dt * this._moveSpeed * this.moveDirection.x\r\n        this.targetNode.y += dt * this._moveSpeed * this.moveDirection.y\r\n\r\n        const targetx = this.targetNode.x\r\n        const targety = this.targetNode.y\r\n        if (targetx >= this._maxWidth && targety >= this._maxHeight) this.moveDirection = cc.v2(-1, 0)\r\n        if (targetx <= this._minWidth && targety <= this._minHeight) this.moveDirection = cc.v2(1, 0)\r\n    }\r\n\r\n    changeMoveDirection() {\r\n        this.moveDirection = (this.moveDirection.equals(cc.v2(1, 0))) ? cc.v2(-1, 0) : cc.v2(1, 0);\r\n    }\r\n\r\n    // onDestroy() {\r\n    //     this.stopMoving();\r\n    // }\r\n\r\n    gameOver() {\r\n        this.stopMoving();\r\n        this.targetNode.setPosition(0, 0)\r\n    }\r\n}\r\n"]}