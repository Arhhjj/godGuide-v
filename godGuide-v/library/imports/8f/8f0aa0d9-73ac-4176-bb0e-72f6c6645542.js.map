{"version":3,"sources":["assets\\scripts\\common\\util\\Tool.ts"],"names":[],"mappings":";;;;;;AAAA,iCAA8C;AAE9C,IAAK,QAKJ;AALD,WAAK,QAAQ;IACT,iCAAC,CAAA;IACD,iCAAC,CAAA;IACD,iCAAC,CAAA;IACD,iCAAC,CAAA;AACL,CAAC,EALI,QAAQ,KAAR,QAAQ,QAKZ;AAED;;GAEG;AACH;IAAA;IA0jBA,CAAC;IAzjBG;;;OAGG;IACW,aAAQ,GAAtB,UAA0B,MAAS;QAC/B,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,YAAY,MAAM,EAAE;YAC3E,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,MAAM,GAAQ,IAAI,CAAC;QACvB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,GAAG,EAAE,CAAC;YACZ,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;gBAApB,IAAI,IAAI,eAAA;gBACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;aACpC;SACJ;aAAM;YACH,MAAM,GAAG,EAAE,CAAC;YACZ,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;gBACpB,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACJ;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;OAGG;IACW,SAAI,GAAlB,UAAmB,OAAe;QAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,UAAU,CAAC;gBACP,OAAO,EAAE,CAAC;YACd,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACW,aAAQ,GAAtB,UAAuB,IAAkB,EAAE,OAAe;QACtD,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,CAAC,YAAY,CAAC;gBACd,OAAO,EAAE,CAAC;YACd,CAAC,EAAE,OAAO,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACW,cAAS,GAAvB,UAAwB,IAAkB,EAAE,OAAe,EAAE,KAAoB;QAApB,sBAAA,EAAA,QAAe,aAAK;QAC7E,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,aAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;iBACrB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,GAAG,IAAI,CAAC;iBAC5B,UAAU,CAAC;gBACR,OAAO,EAAE,CAAC;YACd,CAAC,CAAC;iBACD,KAAK,EAAE;iBACP,YAAY,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;OAOG;IACW,oBAAe,GAA7B,UAA8B,QAAoB,EAAE,MAAiB,EAAE,QAAgB,EAAE,MAAkB,EAAE,KAAoB;QAAxC,uBAAA,EAAA,UAAkB;QAAE,sBAAA,EAAA,QAAe,aAAK;QAC7H,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG;YACP,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YACtB,IAAI,aAAK,CAAC,IAAI,EAAE,KAAK,CAAC;iBACjB,YAAY,CAAC,MAAM,CAAC;iBACpB,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC;iBAC/B,UAAU,CAAC;gBACR,QAAQ,EAAE,CAAC;gBACX,KAAK,EAAE,CAAC;gBACR,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,EAAE;oBACpB,IAAI,EAAE,CAAC;iBACV;YACL,CAAC,CAAC;iBACD,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC;QACF,IAAI,EAAE,CAAC;IACX,CAAC;IAED;;;;;;OAMG;IACW,SAAI,GAAlB,UAAmB,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,GAAe;QAAf,oBAAA,EAAA,OAAe;QAC/D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAClB,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjE,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAC/B,KAAK,GAAG,CAAC,CAAC;SACb;QACD,OAAO,CAAC,GAAG,KAAK,CAAC;IACrB,CAAC;IAED;;OAEG;IACW,qBAAgB,GAA9B,UAA+B,EAAW,EAAE,EAAW,EAAE,CAAS;QAC9D,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;YAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QAC/B,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED;;OAEG;IACW,gBAAW,GAAzB,UAA0B,EAAW,EAAE,EAAW;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QAEtC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE;YAC5B,OAAO,IAAI,CAAC;SACf;QACD,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACW,oBAAe,GAA7B,UAA8B,MAAc;QACxC,IAAI,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;QAC1B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,MAAM,IAAI,GAAG,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;OAEG;IACW,oBAAe,GAA7B,UAA8B,CAAS,EAAE,CAAS,EAAE,MAAc;QAC9D,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,MAAM,GAAG,EAAE,IAAI,MAAM,GAAG,GAAG,EAAE;YAC7B,CAAC,GAAG,CAAC,CAAC,CAAC;SACV;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,MAAM,GAAG,GAAG,EAAE;YACd,CAAC,GAAG,CAAC,CAAC,CAAC;SACV;QAED,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACW,4BAAuB,GAArC,UAAsC,QAA2B,EAAE,MAAe,EAAE,YAA+B,EAAE,YAAoB;QACrI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClG,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,CAAC,GAAG,QAAQ,CAAC;SAChB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,GAAG,QAAQ,CAAC;aAChB;iBAAM;gBACH,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACnE;SACJ;QACD,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,YAAY,GAAG,YAAY,CAAC;IAC9D,CAAC;IAED;;;;;;OAMG;IACW,YAAO,GAArB,UAAsB,GAAW,EAAE,GAAW,EAAE,KAAa,EAAE,WAA2B;QAA3B,4BAAA,EAAA,kBAA2B;QACtF,OAAO,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC;IACnF,CAAC;IAED;;OAEG;IACW,YAAO,GAArB,UAAsB,GAAW,EAAE,GAAuB;QAAvB,oBAAA,EAAA,eAAuB;QACtD,IAAI,GAAG,KAAK,SAAS,EAAE;YACnB,GAAG,GAAG,GAAG,CAAC;YACV,GAAG,GAAG,CAAC,CAAC;SACX;QACD,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACzD,CAAC;IAED;;OAEG;IACW,cAAS,GAAvB,UAAwB,GAAW,EAAE,GAAuB;QAAvB,oBAAA,EAAA,eAAuB;QACxD,IAAI,GAAG,KAAK,SAAS,EAAE;YACnB,GAAG,GAAG,GAAG,CAAC;YACV,GAAG,GAAG,CAAC,CAAC;SACX;QACD,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC7C,CAAC;IAED;;;OAGG;IACW,mBAAc,GAA5B,UAA6B,IAAY;QACrC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACW,kBAAa,GAA3B,UAA4B,SAAmB;QAC3C,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACrC,IAAI,QAAQ,GAAG,CAAC,CAAA;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,OAAO,GAAG,QAAQ,EAAE;gBACpB,OAAO,CAAC,CAAC;aACZ;SACJ;QACD,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACW,kBAAa,GAA3B,UAA4B,GAAW;QACnC,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxB,GAAG,GAAG,EAAE,CAAC;QACT,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC;YACV,GAAG,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACW,YAAO,GAArB,UAAyB,GAAa;;QAClC,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtD,KAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,EAAtD,GAAG,CAAC,WAAW,CAAC,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,QAAA,CAA+B;SAC3D;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACW,cAAS,GAAvB,UAA2B,GAAa;QACpC,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YACjB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACW,aAAQ,GAAtB,UAA0B,GAAQ,EAAE,KAAgC;QAChE,IAAI,GAAG,GAAG,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,UAAC,CAAC,IAAO,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,KAA8B,CAAC,CAAC;QACtI,OAAO,GAAG,IAAI,CAAC,CAAC;IACpB,CAAC;IAED;;OAEG;IACW,cAAS,GAAvB,UAA2B,GAAQ,EAAE,IAAY,EAAE,IAAY;;QAC3D,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE;YACnG,OAAO;SACV;QACD,KAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,EAA9C,GAAG,CAAC,IAAI,CAAC,QAAA,EAAE,GAAG,CAAC,IAAI,CAAC,QAAA,CAA2B;IACpD,CAAC;IAED;;OAEG;IACW,cAAS,GAAvB,UAA2B,GAAQ,EAAE,OAAe,EAAE,KAAa;QAC/D,IAAI,OAAO,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE;YAC3G,OAAO;SACV;QACD,IAAI,IAAI,GAAQ,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACW,aAAQ,GAAtB,UAA0B,GAAQ,EAAE,GAAM,EAAE,SAA0B;QAA1B,0BAAA,EAAA,iBAA0B;QAClE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;YACvC,OAAO,KAAK,CAAC;SAChB;QACD,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACd,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACW,gBAAW,GAAzB,UAA6B,GAAQ,EAAE,GAAM;QACzC,IAAI,KAAK,GAAW,GAAG,CAAC,SAAS,CAAC,UAAC,CAAC,IAAO,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED;;;;;;;;OAQG;IACW,iBAAY,GAA1B,UAA2B,IAAY;QAAE,gBAAqE;aAArE,UAAqE,EAArE,qBAAqE,EAArE,IAAqE;YAArE,+BAAqE;;QAC1G,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,iBAAiB,EAAE;YACxF,SAAS;YACT,KAAK,IAAI,GAAG,IAAK,MAAM,CAAC,CAAC,CAAqC,EAAE;gBAC5D,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC/B,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,OAAK,GAAG,MAAG,EAAE,GAAG,CAAC,CAAC;oBACvC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAG,CAAC,CAAC;iBACrD;aACJ;SACJ;aAAM;YACH,QAAQ;YACR,MAAM,CAAC,OAAO,CAAC,UAAC,KAAU;gBACtB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,KAAG,KAAO,CAAC,CAAC;YACpD,CAAC,CAAC,CAAC;SACN;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;OAuBG;IACW,qBAAgB,GAA9B,UAA+B,GAAW,EAAE,MAA6F;QAA7F,uBAAA,EAAA,4BAA6F;QACrI,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC/C,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QAE/C,IAAI,OAAO,GAAa,QAAQ,CAAC,CAAC,CAAC;QACnC,IAAI,MAAM,GAAW,EAAE,CAAC;QAExB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC5B,iBAAiB;YACjB,MAAM,GAAG,MAAM,CAAC;YAChB,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBACxB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;SACJ;aAAM;YACH,eAAe;YACf,IAAI,IAAI,GAAG,CAAC,EAAE;gBACV,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;gBAClB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM,IAAI,OAAO,GAAG,CAAC,EAAE;gBACpB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM;gBACH,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;SACJ;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,OAAO,IAAI,EAAE,CAAC;SACjB;QACD,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,OAAO,IAAI,EAAE,CAAC;SACjB;QACD,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,KAAK,IAAI,EAAE,CAAC;SACf;QAED,IAAI,IAAI,GAAG;YACP,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM;YACtC,CAAC,EAAE,KAAG,IAAM;YACZ,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;YACf,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;SAClB,CAAC;QACF,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzC,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;OAQG;IACW,qBAAgB,GAA9B,UAA+B,IAAmB,EAAE,MAAwD,EAAE,KAAsB;QAAhF,uBAAA,EAAA,gDAAwD;QAAE,sBAAA,EAAA,aAAsB;QAChI,IAAI,GAAG,GAAG,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC5D,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACpD,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACvD,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC7D,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAE7D,IAAI,IAAI,GAAG;YACP,IAAI,EAAE,KAAG,IAAM;YACf,EAAE,EAAE,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAI,GAAG,GAAK,CAAC,CAAC,CAAC,KAAG,IAAI,GAAG,GAAK;YACxD,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM;YACtC,CAAC,EAAE,KAAG,IAAM;YACZ,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;YACf,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;SAClB,CAAA;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;OAKG;IACW,kBAAa,GAA3B,UAA4B,IAAyB,EAAE,EAAwB,EAAE,OAAwB;QAAzG,iBAOC;QAPgF,wBAAA,EAAA,mBAAwB;QACrG,IAAI,IAAI,YAAY,EAAE,CAAC,IAAI,EAAE;YACzB,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,CAAU,IAAO,KAAI,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAClF;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,UAAC,CAAU,IAAO,KAAI,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzE;IACL,CAAC;IAED;;OAEG;IACW,kBAAa,GAA3B;QAA4B,eAAmB;aAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;YAAnB,0BAAmB;;QAC3C,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC;YACZ,CAAC,CAAC,kBAAkB,EAAE,CAAC;YACvB,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;MAOE;IACY,wBAAmB,GAAjC,UAAkC,IAAa,EAAE,SAAiB,EAAE,QAAgB,EAAE,KAAa,EAAE,MAAe,EAAE,KAAe;QACjI,IAAI,iBAAiB,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAA;QACvD,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAA,CAAC,uCAAuC;QACzE,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAA,CAAC,eAAe;QACvD,iBAAiB,CAAC,OAAO,GAAG,QAAQ,CAAA,CAAC,gCAAgC;QACrE,iBAAiB,CAAC,eAAe,GAAG,KAAK,CAAA,CAAC,YAAY;QAEtD,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QACzC,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;SACxC;QACD,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAA;SACjD;QAED,MAAM,CAAC,WAAW,GAAG,EAAE,CAAA;QACvB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;IAC9C,CAAC;IAED;;;;;;MAME;IACY,2BAAsB,GAApC,UAAqC,IAAa,EAAE,SAAiB,EAAE,QAAgB,EAAE,MAAe;QACpG,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,MAAM,EAAE;YACR,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACzC,IACI,YAAY,CAAC,MAAM,KAAK,MAAM;oBAC9B,YAAY,CAAC,SAAS,KAAK,SAAS;oBACpC,YAAY,CAAC,OAAO,KAAK,QAAQ,EACnC;oBACE,YAAY;oBACZ,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAChC,MAAM;iBACT;aACJ;SACJ;IACL,CAAC;IAEL,WAAC;AAAD,CA1jBA,AA0jBC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import { Group, Tween, TWEEN } from \"./Tween\";\r\n\r\nenum TimeUnit {\r\n    S,\r\n    M,\r\n    H,\r\n    D\r\n}\r\n\r\n/**\r\n * 工具类\r\n */\r\nexport default class Tool {\r\n    /**\r\n     * 深拷贝\r\n     * @param source 源数据\r\n     */\r\n    public static deepCopy<T>(source: T): T {\r\n        if (typeof source !== \"object\" || source === null || source instanceof RegExp) {\r\n            return source;\r\n        }\r\n\r\n        let result: any = null;\r\n        if (Array.isArray(source)) {\r\n            result = [];\r\n            for (let item of source) {\r\n                result.push(this.deepCopy(item));\r\n            }\r\n        } else {\r\n            result = {};\r\n            for (let key in source) {\r\n                result[key] = this.deepCopy(source[key]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 异步等待 - setTimeout\r\n     * @param seconds \r\n     */\r\n    public static wait(seconds: number): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, seconds * 1000);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 异步等待 - cc.Component.scheduleOnce\r\n     */\r\n    public static waitCmpt(cmpt: cc.Component, seconds: number): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            cmpt.scheduleOnce(() => {\r\n                resolve();\r\n            }, seconds);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 异步等待 - tween 默认group为TWEEN\r\n     */\r\n    public static waitTween(cmpt: cc.Component, seconds: number, group: Group = TWEEN): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            new Tween({ k: 0 }, group)\r\n                .to({ k: 1 }, seconds * 1000)\r\n                .onComplete(() => {\r\n                    resolve();\r\n                })\r\n                .start()\r\n                .bindCCObject(cmpt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 以tween周期性执行回调，会随绑定的target销毁而销毁\r\n     * @param callback \r\n     * @param target \r\n     * @param interval 回调间隔时间 秒\r\n     * @param repeat 回调共会执行repeat+1次\r\n     * @param group tween分组\r\n     */\r\n    public static scheduleByTween(callback: () => void, target: cc.Object, interval: number, repeat: number = 0, group: Group = TWEEN) {\r\n        let count = 0;\r\n        let once = () => {\r\n            let data = { arg: 0 };\r\n            new Tween(data, group)\r\n                .bindCCObject(target)\r\n                .to({ arg: 1 }, interval * 1000)\r\n                .onComplete(() => {\r\n                    callback();\r\n                    count++;\r\n                    if (count < repeat + 1) {\r\n                        once();\r\n                    }\r\n                })\r\n                .start();\r\n        };\r\n        once();\r\n    }\r\n\r\n    /**\r\n     * 线性插值\r\n     * @param a 起始值\r\n     * @param b 目标值\r\n     * @param r ratio between 0 and 1\r\n     * @param min 最小间隔值\r\n     */\r\n    public static lerp(a: number, b: number, r: number, min: number = 0): number {\r\n        min = Math.abs(min);\r\n        let c = b - a;\r\n        let delta = c * r;\r\n        delta = delta < 0 ? Math.min(delta, -min) : Math.max(delta, min);\r\n        if (Math.abs(delta) > Math.abs(c)) {\r\n            delta = c;\r\n        }\r\n        return a + delta;\r\n    }\r\n\r\n    /**\r\n     * 通过两点坐标(不平行于坐标轴)和x，计算两点式方程结果y\r\n     */\r\n    public static calcTwoPointForm(p1: cc.Vec2, p2: cc.Vec2, x: number): number {\r\n        if (p1.x === p2.x) return p1.y;\r\n        return (p2.y - p1.y) * (x - p1.x) / (p2.x - p1.x) + p1.y;\r\n    }\r\n\r\n    /**\r\n     * 返回两个矩形的重叠矩形，不重叠则返回null\r\n     */\r\n    public static overlapRect(r1: cc.Rect, r2: cc.Rect): cc.Rect {\r\n        let xMin = Math.max(r1.xMin, r2.xMin);\r\n        let xMax = Math.min(r1.xMax, r2.xMax);\r\n        let yMin = Math.max(r1.yMin, r2.yMin);\r\n        let yMax = Math.min(r1.yMax, r2.yMax);\r\n\r\n        if (xMin > xMax || yMin > yMax) {\r\n            return null;\r\n        }\r\n        return cc.rect(xMin, yMin, xMax - xMin, yMax - yMin);\r\n    }\r\n\r\n    /**\r\n     * 将角度约束在 [0,360) 区间内\r\n     */\r\n    public static normalizeDegree(degree: number): number {\r\n        let result = degree % 360;\r\n        if (result < 0) {\r\n            result += 360;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 圆心在坐标原点的椭圆，以与x轴逆时针方向的角度计算对应椭圆边上的坐标\r\n     */\r\n    public static getEllipsePoint(a: number, b: number, degree: number): cc.Vec2 {\r\n        degree = this.normalizeDegree(degree);\r\n        let k = Math.tan(cc.misc.degreesToRadians(degree));\r\n        let x = Math.sqrt(b * b / (k * k + b * b / a / a));\r\n        if (degree > 90 && degree < 270) {\r\n            x = -x;\r\n        }\r\n        let y = Math.sqrt(b * b - b * b * x * x / a / a);\r\n        if (degree > 180) {\r\n            y = -y;\r\n        }\r\n\r\n        return cc.v2(x, y);\r\n    }\r\n\r\n    /**\r\n     * 判断射线与圆是否相交\r\n     * @param rayPoint 射线起点\r\n     * @param rayDir 射线方向\r\n     * @param circlrCenter 圆心\r\n     * @param circleRadius 圆半径\r\n     */\r\n    public static isRayCircleIntersection(rayPoint: cc.Vec2 | cc.Vec3, rayDir: cc.Vec2, circlrCenter: cc.Vec2 | cc.Vec3, circleRadius: number): boolean {\r\n        let d = rayDir.magSqr();\r\n        let t = ((circlrCenter.x - rayPoint.x) * rayDir.x + (circlrCenter.y - rayPoint.y) * rayDir.y) / d;\r\n        let p;\r\n        if (d <= 0) {\r\n            p = rayPoint;\r\n        } else {\r\n            if (t < 0) {\r\n                p = rayPoint;\r\n            } else {\r\n                p = cc.v2(rayPoint.x + t * rayDir.x, rayPoint.y + t * rayDir.y);\r\n            }\r\n        }\r\n        let dx = circlrCenter.x - p.x;\r\n        let dy = circlrCenter.y - p.y;\r\n        return (dx * dx + dy * dy) <= circleRadius * circleRadius;\r\n    }\r\n\r\n    /**\r\n     * 返回value是否在 [min, max] 区间内\r\n     * @param min \r\n     * @param max \r\n     * @param value\r\n     * @param includeEdge true(默认值): [min, max]; false: (min, max)\r\n     */\r\n    public static inRange(min: number, max: number, value: number, includeEdge: boolean = true): boolean {\r\n        return includeEdge ? value >= min && value <= max : value > min && value < max;\r\n    }\r\n\r\n    /**\r\n     * 获取区间[min, max)的整数，传入1个参数则区间为[0, min)\r\n     */\r\n    public static randInt(min: number, max: number = undefined): number {\r\n        if (max === undefined) {\r\n            max = min;\r\n            min = 0;\r\n        }\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    /**\r\n     * 获取区间[min, max)的浮点数，传入1个参数则区间为[0, min)\r\n     */\r\n    public static randFloat(min: number, max: number = undefined): number {\r\n        if (max === undefined) {\r\n            max = min;\r\n            min = 0;\r\n        }\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * 返回一个概率值(%)的随机结果是否在概率范围内\r\n     * @param rate 概率值(%) [0,100]\r\n     */\r\n    public static randRateResult(rate: number): boolean {\r\n        return this.randFloat(100) < rate;\r\n    }\r\n\r\n    /**\r\n     * 根据权重数组进行随机，返回结果下标\r\n     * @param weightArr 权重数组\r\n     * @returns 随机到的权重数组下标\r\n     */\r\n    public static randWeightIdx(weightArr: number[]) {\r\n        let sum = 0;\r\n        for (let i = 0; i < weightArr.length; i++) {\r\n            sum += weightArr[i];\r\n        }\r\n        let randNum = this.randFloat(0, sum);\r\n        let curValue = 0\r\n        for (let i = 0; i < weightArr.length; i++) {\r\n            curValue += weightArr[i];\r\n            if (randNum < curValue) {\r\n                return i;\r\n            }\r\n        }\r\n        return weightArr.length - 1;\r\n    }\r\n\r\n    /**\r\n     * Fisher–Yates shuffle 字符串随机乱序\r\n     */\r\n    public static shuffleString(str: string): string {\r\n        let arr: string[] = [];\r\n        for (let i = 0; i < str.length; i++) {\r\n            arr.push(str[i]);\r\n        }\r\n        arr = this.shuffle(arr);\r\n        str = \"\";\r\n        arr.forEach((v) => {\r\n            str += v;\r\n        });\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Fisher–Yates shuffle 数组随机乱序\r\n     */\r\n    public static shuffle<T>(arr: Array<T>): Array<T> {\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let randomIndex = Math.floor(Math.random() * (i + 1));\r\n            [arr[randomIndex], arr[i]] = [arr[i], arr[randomIndex]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 随机返回数组中的一个元素\r\n     */\r\n    public static arrayRand<T>(arr: Array<T>): T {\r\n        if (arr.length <= 0) {\r\n            return null;\r\n        }\r\n        return arr[this.randInt(0, arr.length)];\r\n    }\r\n\r\n    /**\r\n     * 判断数组中是否有某个元素\r\n     * @param arr 数组\r\n     * @param param 元素值或表达元素值满足某种条件的函数\r\n     */\r\n    public static arrayHas<T>(arr: T[], param: T | ((ele: T) => boolean)): boolean {\r\n        let idx = typeof param !== \"function\" ? arr.findIndex((e) => { return e === param; }) : arr.findIndex(param as ((ele: T) => boolean));\r\n        return idx >= 0;\r\n    }\r\n\r\n    /**\r\n     * 根据下标交换数组两个元素位置\r\n     */\r\n    public static arraySwap<T>(arr: T[], idx1: number, idx2: number): void {\r\n        if (idx1 === idx2 || !this.inRange(0, arr.length - 1, idx1) || !this.inRange(0, arr.length - 1, idx2)) {\r\n            return;\r\n        }\r\n        [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\r\n    }\r\n\r\n    /**\r\n     * 将元素从fromIdx位置移到toIdx位置，其余元素相对位置不变\r\n     */\r\n    public static arrayMove<T>(arr: T[], fromIdx: number, toIdx: number): void {\r\n        if (fromIdx === toIdx || !this.inRange(0, arr.length - 1, fromIdx) || !this.inRange(0, arr.length - 1, toIdx)) {\r\n            return;\r\n        }\r\n        let from: T[] = arr.splice(fromIdx, 1);\r\n        arr.splice(toIdx, 0, from[0]);\r\n    }\r\n\r\n    /**\r\n     * 在数组中添加某个元素\r\n     * @param canRepeat 是否可重复添加相同元素 默认false\r\n     * @return 是否执行了添加行为\r\n     */\r\n    public static arrayAdd<T>(arr: T[], ele: T, canRepeat: boolean = false): boolean {\r\n        if (!canRepeat && this.arrayHas(arr, ele)) {\r\n            return false;\r\n        }\r\n        arr.push(ele);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 在数组中删除某个元素(若有多个相同元素则只删除第一个)\r\n     * @return 是否执行了删除行为\r\n     */\r\n    public static arrayDelete<T>(arr: T[], ele: T): boolean {\r\n        let index: number = arr.findIndex((e) => { return e === ele; });\r\n        if (index >= 0) {\r\n            arr.splice(index, 1);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据参数返回格式化字符串\r\n     * @param text 源字符串\r\n     * @param option 用于格式化源字符串的数据，可以是键值对，也可以按顺序传参\r\n     * @example\r\n     * // 可使用以下两种调用方式，返回结果都是\"测试字符串111--abc...\"\r\n     * Tool.formatString(\"测试字符串%{a1}--%{a2}...\", {a1: 111, a2: \"abc\"});\r\n     * Tool.formatString(\"测试字符串%{a1}--%{a2}...\", 111, \"abc\");\r\n     */\r\n    public static formatString(text: string, ...option: [Record<string, string | number>] | Array<string | number>): string {\r\n        let result = text;\r\n        if (option.length === 1 && Object.prototype.toString.call(option[0]) === \"[object Object]\") {\r\n            // 参数为键值对\r\n            for (let arg in (option[0] as Record<string, string | number>)) {\r\n                if (option[0].hasOwnProperty(arg)) {\r\n                    let reg = new RegExp(`%{${arg}}`, \"g\");\r\n                    result = result.replace(reg, `${option[0][arg]}`);\r\n                }\r\n            }\r\n        } else {\r\n            // 参数为数组\r\n            option.forEach((value: any) => {\r\n                result = result.replace(/%\\{.*?\\}/, `${value}`);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 对一段时间返回格式化时间字符串\r\n     * @param sec 时间s\r\n     * @param format 格式化字符串\r\n     * @example\r\n     * // 当format为string时，会以format中的最大时间单位进行格式化\r\n     * Tool.formatTimeString(3601, \"%{m}:%{s}\"); // 60:1\r\n     * Tool.formatTimeString(3601, \"%{mm}:%{ss}\"); // 60:01\r\n     * Tool.formatTimeString(3601, \"%{hh}:%{mm}:%{ss}\"); // 01:00:01\r\n     * \r\n     * // 当format为object时，会以传入的sec计算最大的时间单位，并选择format对应的字符串进行格式化\r\n     * Tool.formatTimeString(100, {\r\n     *     S: \"%{s}秒\",\r\n     *     M: \"%{m}分%{s}秒\",\r\n     *     H: \"%{h}时%{m}分%{s}秒\",\r\n     *     D: \"%{d}天%{h}时%{m}分%{s}秒\"\r\n     * }); // 1分40秒\r\n     * Tool.formatTimeString(100000, {\r\n     *     S: \"%{s}秒\",\r\n     *     M: \"%{m}分%{s}秒\",\r\n     *     H: \"%{h}时%{m}分%{s}秒\",\r\n     *     D: \"%{d}天%{h}时%{m}分%{s}秒\"\r\n     * }); // 1天3时46分40秒\r\n     */\r\n    public static formatTimeString(sec: number, format: string | { \"S\": string; \"M\": string; \"H\": string; \"D\": string } = \"%{hh}:%{mm}:%{ss}\"): string {\r\n        let seconds: number = Math.floor(sec);\r\n        let minutes: number = Math.floor(seconds / 60);\r\n        let hours: number = Math.floor(seconds / 3600);\r\n        let days: number = Math.floor(seconds / 86400);\r\n\r\n        let maxUnit: TimeUnit = TimeUnit.S;\r\n        let result: string = \"\";\r\n\r\n        if (typeof format === \"string\") {\r\n            // 查询格式化字符串中最大的单位\r\n            result = format;\r\n            if (/%\\{d+\\}/.test(format)) {\r\n                maxUnit = TimeUnit.D;\r\n            } else if (/%\\{h+\\}/.test(format)) {\r\n                maxUnit = TimeUnit.H;\r\n            } else if (/%\\{m+\\}/.test(format)) {\r\n                maxUnit = TimeUnit.M;\r\n            }\r\n        } else {\r\n            // 以传入的数值判断最大单位\r\n            if (days > 0) {\r\n                maxUnit = TimeUnit.D;\r\n                result = format.D;\r\n            } else if (hours > 0) {\r\n                maxUnit = TimeUnit.H;\r\n                result = format.H;\r\n            } else if (minutes > 0) {\r\n                maxUnit = TimeUnit.M;\r\n                result = format.M;\r\n            } else {\r\n                maxUnit = TimeUnit.S;\r\n                result = format.S;\r\n            }\r\n        }\r\n\r\n        if (maxUnit > TimeUnit.S) {\r\n            seconds %= 60;\r\n        }\r\n        if (maxUnit > TimeUnit.M) {\r\n            minutes %= 60;\r\n        }\r\n        if (maxUnit > TimeUnit.H) {\r\n            hours %= 24;\r\n        }\r\n\r\n        let data = {\r\n            dd: days < 10 ? `0${days}` : `${days}`,\r\n            d: `${days}`,\r\n            hh: hours < 10 ? `0${hours}` : `${hours}`,\r\n            h: `${hours}`,\r\n            mm: minutes < 10 ? `0${minutes}` : `${minutes}`,\r\n            m: `${minutes}`,\r\n            ss: seconds < 10 ? `0${seconds}` : `${seconds}`,\r\n            s: `${seconds}`\r\n        };\r\n        result = this.formatString(result, data);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 将一个Date对象或Date时间戳返回格式化日期字符串\r\n     * @param date Date对象或Date时间戳\r\n     * @param format 格式化字符串\r\n     * @param isUTC true:UTC时间 false:本地时间\r\n     * @example\r\n     * Tool.formatDateString(0, \"%{YYYY}-%{MM}-%{dd} %{hh}:%{mm}:%{ss}\", true); // \"1970-01-01 00:00:00\"\r\n     * Tool.formatDateString(0, \"%{dd}/%{MM}/%{YY}\", true); // \"01/01/70\"\r\n     */\r\n    public static formatDateString(date: number | Date, format: string = \"%{YYYY}-%{MM}-%{dd} %{hh}:%{mm}:%{ss}\", isUTC: boolean = false): string {\r\n        let src = date instanceof Date ? date : new Date(date);\r\n        let year = isUTC ? src.getUTCFullYear() : src.getFullYear();\r\n        let month = isUTC ? src.getUTCMonth() + 1 : src.getMonth() + 1;\r\n        let days = isUTC ? src.getUTCDate() : src.getDate();\r\n        let hours = isUTC ? src.getUTCHours() : src.getHours();\r\n        let minutes = isUTC ? src.getUTCMinutes() : src.getMinutes();\r\n        let seconds = isUTC ? src.getUTCSeconds() : src.getSeconds();\r\n\r\n        let data = {\r\n            YYYY: `${year}`,\r\n            YY: year % 100 < 10 ? `0${year % 100}` : `${year % 100}`,\r\n            MM: month < 10 ? `0${month}` : `${month}`,\r\n            M: `${month}`,\r\n            dd: days < 10 ? `0${days}` : `${days}`,\r\n            d: `${days}`,\r\n            hh: hours < 10 ? `0${hours}` : `${hours}`,\r\n            h: `${hours}`,\r\n            mm: minutes < 10 ? `0${minutes}` : `${minutes}`,\r\n            m: `${minutes}`,\r\n            ss: seconds < 10 ? `0${seconds}` : `${seconds}`,\r\n            s: `${seconds}`\r\n        }\r\n        let result = this.formatString(format, data);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 子节点递归处理\r\n     * @param node 需要递归处理的节点或节点数组\r\n     * @param cb 节点处理函数\r\n     * @param thisArg cb绑定的this对象\r\n     */\r\n    public static nodeRecursive(node: cc.Node | cc.Node[], cb: (n: cc.Node) => void, thisArg: any = undefined): void {\r\n        if (node instanceof cc.Node) {\r\n            cb.call(thisArg, node);\r\n            node.children.forEach((n: cc.Node) => { this.nodeRecursive(n, cb, thisArg); });\r\n        } else if (Array.isArray(node)) {\r\n            node.forEach((n: cc.Node) => { this.nodeRecursive(n, cb, thisArg); });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * destroy并立即remove传入节点的所有子节点\r\n     */\r\n    public static clearChildren(...nodes: cc.Node[]): void {\r\n        nodes.forEach((e) => {\r\n            e.destroyAllChildren();\r\n            e.removeAllChildren();\r\n        });\r\n    }\r\n\r\n    /**\r\n    * 为节点添加带参数的点击事件\r\n    * @param node 添加点击事件的节点\r\n    * @param component 组件名称 -- 脚本名称\r\n    * @param callBack 点击事件函数 -- 需要在该component脚本内的方法\r\n    * @param param 点击事件传入的参数\r\n    * @param target 事件处理代码组件所属的节点 -- 该component脚本所挂载在的节点\r\n    */\r\n    public static addParamButtonClick(node: cc.Node, component: string, callBack: string, param: string, target: cc.Node, scale?: boolean) {\r\n        let clickEventHandler = new cc.Component.EventHandler()\r\n        clickEventHandler.target = target // 事件处理代码组件所属的节点 -- 该component脚本所挂载在的节点\r\n        clickEventHandler.component = component // 组件名称 -- 脚本名称\r\n        clickEventHandler.handler = callBack // 点击事件函数 -- 需要在该component脚本内的方法\r\n        clickEventHandler.customEventData = param // 点击事件传入的参数\r\n\r\n        let button = node.getComponent(cc.Button)\r\n        if (!button) {\r\n            button = node.addComponent(cc.Button)\r\n        }\r\n        if (scale) {\r\n            button.transition = cc.Button.Transition.SCALE\r\n        }\r\n\r\n        button.clickEvents = []\r\n        button.clickEvents.push(clickEventHandler)\r\n    }\r\n\r\n    /**\r\n    * 解绑带参数的点击事件\r\n    * @param node 添加点击事件的节点\r\n    * @param component 组件名称 -- 脚本名称\r\n    * @param callBack 点击事件函数 -- 需要在该component脚本内的方法\r\n    * @param target 事件处理代码组件所属的节点 -- 该component脚本所挂载在的节点\r\n    */\r\n    public static removeParamButtonClick(node: cc.Node, component: string, callBack: string, target: cc.Node) {\r\n        let button = node.getComponent(cc.Button);\r\n        if (button) {\r\n            for (let i = button.clickEvents.length - 1; i >= 0; i--) {\r\n                let eventHandler = button.clickEvents[i];\r\n                if (\r\n                    eventHandler.target === target &&\r\n                    eventHandler.component === component &&\r\n                    eventHandler.handler === callBack\r\n                ) {\r\n                    // 移除对应的点击事件\r\n                    button.clickEvents.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}