{"version":3,"sources":["assets\\scripts\\common\\cmpt\\ui\\scrollList\\VirtualLayout.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Res from \"../../../util/Res\";\r\nimport Tool from \"../../../util/Tool\";\r\nimport VirtualItem from \"./VirtualItem\";\r\nimport VirtualList, { MainTemplateType, OtherTemplateType, VirtualArgs } from \"./VirtualList\";\r\n\r\nconst { ccclass, property, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 布局模式\r\n */\r\nenum LayoutType {\r\n    /** 横向 */\r\n    HORIZONTAL,\r\n    /** 纵向 */\r\n    VERTICAL,\r\n    /** 网格 */\r\n    GRID\r\n}\r\n\r\n/**\r\n * 布局轴向，只用于GRID布局。\r\n */\r\nenum AxisDirection {\r\n    HORIZONTAL,\r\n    VERTICAL\r\n}\r\n\r\n/**\r\n * 纵向排列方向\r\n */\r\nenum VerticalDirection {\r\n    TOP_TO_BOTTOM,\r\n    BOTTOM_TO_TOP\r\n}\r\n\r\n/**\r\n * 横向排列方向\r\n */\r\nenum HorizontalDirection {\r\n    LEFT_TO_RIGHT,\r\n    RIGHT_TO_LEFT\r\n}\r\n\r\n/**\r\n * 虚拟列表所需的布局组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\nexport default class VirtualLayout<T extends VirtualArgs> extends cc.Component {\r\n    @property({ type: cc.Enum(LayoutType), tooltip: CC_DEV && \"布局模式\" })\r\n    public type: LayoutType = LayoutType.VERTICAL;\r\n\r\n    @property({\r\n        type: cc.Enum(AxisDirection),\r\n        tooltip: CC_DEV && \"GRID布局的起始轴方向\\nHORIZONTAL：固定宽度，动态改变高度\\nVERTICAL：固定高度，动态改变宽度\",\r\n        visible() { return this.type === LayoutType.GRID; }\r\n    })\r\n    public startAxis: AxisDirection = AxisDirection.HORIZONTAL;\r\n\r\n    @property({ visible() { return this.type === LayoutType.HORIZONTAL || this.type === LayoutType.GRID; } })\r\n    public left: number = 0;\r\n\r\n    @property({ visible() { return this.type === LayoutType.HORIZONTAL || this.type === LayoutType.GRID; } })\r\n    public right: number = 0;\r\n\r\n    @property({ visible() { return this.type === LayoutType.VERTICAL || this.type === LayoutType.GRID; } })\r\n    public top: number = 0;\r\n\r\n    @property({ visible() { return this.type === LayoutType.VERTICAL || this.type === LayoutType.GRID; } })\r\n    public bottom: number = 0;\r\n\r\n    @property({ visible() { return this.type === LayoutType.HORIZONTAL || this.type === LayoutType.GRID; } })\r\n    public spacingX: number = 0;\r\n\r\n    @property({ visible() { return this.type === LayoutType.VERTICAL || this.type === LayoutType.GRID; } })\r\n    public spacingY: number = 0;\r\n\r\n    @property({\r\n        type: cc.Enum(VerticalDirection),\r\n        visible() { return this.type === LayoutType.VERTICAL || this.type === LayoutType.GRID; }\r\n    })\r\n    public verticalDirection: VerticalDirection = VerticalDirection.TOP_TO_BOTTOM;\r\n\r\n    @property({\r\n        type: cc.Enum(HorizontalDirection),\r\n        visible() { return this.type === LayoutType.HORIZONTAL || this.type === LayoutType.GRID; }\r\n    })\r\n    public horizontalDirection: HorizontalDirection = HorizontalDirection.LEFT_TO_RIGHT;\r\n\r\n    /** 所属虚拟列表 */\r\n    private _list: VirtualList<T> = null;\r\n    /** mask节点（content父节点） */\r\n    private _view: cc.Node = null;\r\n    /** view坐标系下view的边界矩形 */\r\n    private _viewEdge: cc.Rect = null;\r\n    /** 元素节点大小固定时的size */\r\n    private _fixedSize: cc.Size = null;\r\n    /** 标记当前帧是否需要更新content size */\r\n    private _sizeDirty: boolean = false;\r\n    /** 标记当前帧是否需要更新view区域数据显示 */\r\n    private _viewDirty: boolean = false;\r\n    /** 标记当前帧是否需要同步others content的坐标 */\r\n    private _posDirty: boolean = false;\r\n    /** main content激活状态的item */\r\n    private _items: cc.Node[] = [];\r\n    /** main content被回收的item池（不移出节点树，只设置opacity） */\r\n    private _itemPool: cc.Node[] = [];\r\n    /** others content激活状态的item，下标顺序与this.list.Others数组一致 */\r\n    private _otherItemsArr: cc.Node[][] = [];\r\n    /** others content被回收的item池数组（不移出节点树，只设置opacity），下标顺序与this.list.Others数组一致 */\r\n    private _otherItemPoolArr: cc.Node[][] = [];\r\n\r\n    public onInit(list: VirtualList<T>): void {\r\n        this._list = list;\r\n        this._view = this.node.parent;\r\n        this._viewEdge = this.getNodeEdgeRect(this._view);\r\n\r\n        // 初始化分层相关数据\r\n        this._otherItemsArr = [];\r\n        this._otherItemPoolArr = [];\r\n        this._list.others.forEach((e) => {\r\n            this._otherItemsArr.push([]);\r\n            this._otherItemPoolArr.push([]);\r\n        });\r\n\r\n        // 元素大小固定时初始化fixedSize\r\n        if (this._fixedSize === null) {\r\n            this.addItemNode(false);\r\n            this._fixedSize = this._itemPool[0].getContentSize();\r\n        }\r\n\r\n        // 注册事件\r\n        this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\r\n        this._view.on(cc.Node.EventType.SIZE_CHANGED, this.onViewSizeChanged, this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        // 注销事件\r\n        this.node.off(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\r\n        this._view.off(cc.Node.EventType.SIZE_CHANGED, this.onViewSizeChanged, this);\r\n    }\r\n\r\n    /**\r\n     * 立即更新布局\r\n     */\r\n    public forceUpdate(): void {\r\n        this.updatePos();\r\n        this.updateSize();\r\n        this.updateView();\r\n    }\r\n\r\n    protected lateUpdate(): void {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * 同步others的坐标\r\n     */\r\n    private updatePos(): void {\r\n        if (!this._posDirty) {\r\n            return;\r\n        }\r\n        this._posDirty = false;\r\n        this._list.others.forEach((e) => {\r\n            e.content.position = this.node.position;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 更新content size\r\n     */\r\n    private updateSize(): void {\r\n        if (!this._sizeDirty) {\r\n            return;\r\n        }\r\n        this._sizeDirty = false;\r\n\r\n        if (this._list.isFixedSize) {\r\n            this.updateSizeFixed();\r\n        } else {\r\n            this.updateSizeUnfixed();\r\n        }\r\n    }\r\n\r\n    private updateSizeFixed(): void {\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            if (this._list.argsArr.length <= 0) {\r\n                this.node.height = 0;\r\n                return;\r\n            }\r\n\r\n            this.node.height = this.top + this.bottom + (this._list.argsArr.length - 1) * this.spacingY + this._fixedSize.height * this._list.argsArr.length;\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            if (this._list.argsArr.length <= 0) {\r\n                this.node.width = 0;\r\n                return;\r\n            }\r\n\r\n            this.node.width = this.left + this.right + (this._list.argsArr.length - 1) * this.spacingX + this._fixedSize.width * this._list.argsArr.length;\r\n        } else {\r\n            if (this.startAxis === AxisDirection.HORIZONTAL) {\r\n                if (this._list.argsArr.length <= 0) {\r\n                    this.node.height = 0;\r\n                    return;\r\n                }\r\n\r\n                // 计算一行可以排列几个，至少1个\r\n                let num = Math.floor((this.node.width - this.left - this.right + this.spacingX) / (this._fixedSize.width + this.spacingX));\r\n                num = Math.max(num, 1);\r\n                // 计算可以排列几行\r\n                let row = Math.ceil(this._list.argsArr.length / num);\r\n                // 高度\r\n                this.node.height = this.top + this.bottom + (row - 1) * this.spacingY + this._fixedSize.height * row;\r\n            } else {\r\n                if (this._list.argsArr.length <= 0) {\r\n                    this.node.width = 0;\r\n                    return;\r\n                }\r\n\r\n                // 计算一列可以排列几个，至少1个\r\n                let num = Math.floor((this.node.height - this.top - this.bottom + this.spacingY) / (this._fixedSize.height + this.spacingY));\r\n                num = Math.max(num, 1);\r\n                // 计算可以排列几列\r\n                let column = Math.ceil(this._list.argsArr.length / num);\r\n                // 宽度\r\n                this.node.width = this.left + this.right + (column - 1) * this.spacingX + this._fixedSize.width * column;\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateSizeUnfixed(): void {\r\n        // 缓存宽高，最后赋值，是因为修改content size时会触发scrollview._calculateBoundary，改变content的坐标\r\n        let result = 0;\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            if (this._list.argsArr.length <= 0) {\r\n                this.node.height = 0;\r\n                return;\r\n            }\r\n\r\n            result = this.top + this.bottom + (this._list.argsArr.length - 1) * this.spacingY;\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                result += size.height;\r\n            }\r\n            this.node.height = result;\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            if (this._list.argsArr.length <= 0) {\r\n                this.node.width = 0;\r\n                return;\r\n            }\r\n\r\n            result = this.left + this.right + (this._list.argsArr.length - 1) * this.spacingX;\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                result += size.width;\r\n            }\r\n            this.node.width = result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新view区域数据显示\r\n     */\r\n    private updateView(): void {\r\n        if (!this._viewDirty || this._list.argsArr.length <= 0) {\r\n            return;\r\n        }\r\n        this._viewDirty = false;\r\n\r\n        if (this._list.isFixedSize) {\r\n            this.updateViewFixed();\r\n        } else {\r\n            this.updateViewUnfixed();\r\n        }\r\n    }\r\n\r\n    private updateViewFixed(): void {\r\n        let viewResult = this.checkViewItem();\r\n        let inView = viewResult.inView;\r\n        let outView = viewResult.outView;\r\n        let contentEdge = this.getNodeEdgeRect(this.node);\r\n        let xMax: number, xMin: number, yMax: number, yMin: number;\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                    yMax = contentEdge.yMax - (this.top + i * this.spacingY + this._fixedSize.height * i);\r\n                    yMin = yMax - this._fixedSize.height;\r\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                        break;\r\n                    }\r\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    yMin = contentEdge.yMin + this.bottom + i * this.spacingY + this._fixedSize.height * i;\r\n                    yMax = yMin + this._fixedSize.height;\r\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                        break;\r\n                    }\r\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // 判断显示区域内部是否有节点显示此条数据\r\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\r\n                if (found !== -1) {\r\n                    continue;\r\n                }\r\n\r\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\r\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\r\n                let item: cc.Node = this._items[itemIdx];\r\n                this.setItem(cc.v3(0, yMin + item.anchorY * item.height), i, itemIdx);\r\n            }\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                    xMax = contentEdge.xMax - (this.right + i * this.spacingX + this._fixedSize.width * i);\r\n                    xMin = xMax - this._fixedSize.width;\r\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                        break;\r\n                    }\r\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    xMin = contentEdge.xMin + this.left + i * this.spacingX + this._fixedSize.width * i;\r\n                    xMax = xMin + this._fixedSize.width;\r\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                        break;\r\n                    }\r\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // 判断显示区域内部是否有节点显示此条数据\r\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\r\n                if (found !== -1) {\r\n                    continue;\r\n                }\r\n\r\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\r\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\r\n                let item: cc.Node = this._items[itemIdx];\r\n                this.setItem(cc.v3(xMin + item.anchorX * item.width, 0), i, itemIdx);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                // 计算当前元素排在第几行第几列，从0开始\r\n                let rowIndex: number = 0;\r\n                let columnIndex: number = 0;\r\n                if (this.startAxis === AxisDirection.HORIZONTAL) {\r\n                    // 起始轴为横向\r\n                    let num = Math.floor((this.node.width - this.left - this.right + this.spacingX) / (this._fixedSize.width + this.spacingX));\r\n                    num = Math.max(num, 1);\r\n                    rowIndex = Math.floor(i / num);\r\n                    columnIndex = i % num;\r\n                    // 计算纵向\r\n                    if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                        yMax = contentEdge.yMax - (this.top + rowIndex * this.spacingY + this._fixedSize.height * rowIndex);\r\n                        yMin = yMax - this._fixedSize.height;\r\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                            break;\r\n                        }\r\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                            continue;\r\n                        }\r\n                    } else {\r\n                        yMin = contentEdge.yMin + this.bottom + rowIndex * this.spacingY + this._fixedSize.height * rowIndex;\r\n                        yMax = yMin + this._fixedSize.height;\r\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                            break;\r\n                        }\r\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // 计算横向\r\n                    if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                        xMax = contentEdge.xMax - (this.right + columnIndex * this.spacingX + this._fixedSize.width * columnIndex);\r\n                        xMin = xMax - this._fixedSize.width;\r\n                    } else {\r\n                        xMin = contentEdge.xMin + this.left + columnIndex * this.spacingX + this._fixedSize.width * columnIndex;\r\n                        xMax = xMin + this._fixedSize.width;\r\n                    }\r\n                    if (xMax + this.node.x < this._viewEdge.xMin || xMin + this.node.x > this._viewEdge.xMax) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    // 起始轴为纵向\r\n                    let num = Math.floor((this.node.height - this.top - this.bottom + this.spacingY) / (this._fixedSize.height + this.spacingY));\r\n                    num = Math.max(num, 1);\r\n                    rowIndex = i % num;\r\n                    columnIndex = Math.floor(i / num);\r\n                    // 计算横向\r\n                    if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                        xMax = contentEdge.xMax - (this.right + columnIndex * this.spacingX + this._fixedSize.width * columnIndex);\r\n                        xMin = xMax - this._fixedSize.width;\r\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                            break;\r\n                        }\r\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                            continue;\r\n                        }\r\n                    } else {\r\n                        xMin = contentEdge.xMin + this.left + columnIndex * this.spacingX + this._fixedSize.width * columnIndex;\r\n                        xMax = xMin + this._fixedSize.width;\r\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                            break;\r\n                        }\r\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // 计算纵向\r\n                    if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                        yMax = contentEdge.yMax - (this.top + rowIndex * this.spacingY + this._fixedSize.height * rowIndex);\r\n                        yMin = yMax - this._fixedSize.height;\r\n                    } else {\r\n                        yMin = contentEdge.yMin + this.bottom + rowIndex * this.spacingY + this._fixedSize.height * rowIndex;\r\n                        yMax = yMin + this._fixedSize.height;\r\n                    }\r\n                    if (yMax + this.node.y < this._viewEdge.yMin || yMin + this.node.y > this._viewEdge.yMax) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // 判断显示区域内部是否有节点显示此条数据\r\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\r\n                if (found !== -1) {\r\n                    continue;\r\n                }\r\n\r\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\r\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\r\n                let item: cc.Node = this._items[itemIdx];\r\n                this.setItem(cc.v3(xMin + item.anchorX * item.width, yMin + item.anchorY * item.height), i, itemIdx);\r\n            }\r\n        }\r\n\r\n        // 回收区域外的节点\r\n        for (let i = outView.length - 1; i >= 0; i--) {\r\n            this.putActivatedItemByIndex(outView[i]);\r\n        }\r\n    }\r\n\r\n    private updateViewUnfixed(): void {\r\n        let viewResult = this.checkViewItem();\r\n        let inView = viewResult.inView;\r\n        let outView = viewResult.outView;\r\n        let contentEdge = this.getNodeEdgeRect(this.node);\r\n        let xMax: number, xMin: number, yMax: number, yMin: number;\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            let totalHeight: number = 0;\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                totalHeight += size.height;\r\n                if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                    yMax = contentEdge.yMax - (this.top + i * this.spacingY + (totalHeight - size.height));\r\n                    yMin = yMax - size.height;\r\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                        break;\r\n                    }\r\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    yMin = contentEdge.yMin + this.bottom + i * this.spacingY + (totalHeight - size.height);\r\n                    yMax = yMin + size.height;\r\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\r\n                        break;\r\n                    }\r\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // 判断显示区域内部是否有节点显示此条数据\r\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\r\n                if (found !== -1) {\r\n                    continue;\r\n                }\r\n\r\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\r\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\r\n                let item: cc.Node = this._items[itemIdx];\r\n                item.setContentSize(size);\r\n                this.setItem(cc.v3(0, yMin + item.anchorY * size.height), i, itemIdx);\r\n            }\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            let totalWidth: number = 0;\r\n            for (let i = 0; i < this._list.argsArr.length; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                totalWidth += size.width;\r\n                if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                    xMax = contentEdge.xMax - (this.right + i * this.spacingX + (totalWidth - size.width));\r\n                    xMin = xMax - size.width;\r\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                        break;\r\n                    }\r\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    xMin = contentEdge.xMin + this.left + i * this.spacingX + (totalWidth - size.width);\r\n                    xMax = xMin + size.width;\r\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\r\n                        break;\r\n                    }\r\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // 判断显示区域内部是否有节点显示此条数据\r\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\r\n                if (found !== -1) {\r\n                    continue;\r\n                }\r\n\r\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\r\n                let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\r\n                let item: cc.Node = this._items[itemIdx];\r\n                item.setContentSize(size);\r\n                this.setItem(cc.v3(xMin + item.anchorX * size.width, 0), i, itemIdx);\r\n            }\r\n        }\r\n\r\n        // 回收区域外的节点\r\n        for (let i = outView.length - 1; i >= 0; i--) {\r\n            this.putActivatedItemByIndex(outView[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 区分在view内部与外部的items数组下标（返回的下标数组会从小到大排序）\r\n     */\r\n    private checkViewItem(): { inView: number[], outView: number[] } {\r\n        // 显示区域内部的下标\r\n        let inView: number[] = [];\r\n        // 显示区域外部的下标\r\n        let outView: number[] = [];\r\n\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            for (let i = 0; i < this._items.length; i++) {\r\n                let item = this._items[i];\r\n                let box = item.getBoundingBox();\r\n                if (box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\r\n                    inView.push(i);\r\n                } else {\r\n                    outView.push(i);\r\n                }\r\n            }\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            for (let i = 0; i < this._items.length; i++) {\r\n                let item = this._items[i];\r\n                let box = item.getBoundingBox();\r\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin) {\r\n                    inView.push(i);\r\n                } else {\r\n                    outView.push(i);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this._items.length; i++) {\r\n                let item = this._items[i];\r\n                let box = item.getBoundingBox();\r\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin\r\n                    && box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\r\n                    inView.push(i);\r\n                } else {\r\n                    outView.push(i);\r\n                }\r\n            }\r\n        }\r\n\r\n        return { inView: inView, outView: outView };\r\n    }\r\n\r\n    /**\r\n     * 设置item数据与坐标\r\n     * @param p 节点坐标\r\n     * @param dataIdx this._dataArr的下标 \r\n     * @param itemIdx this._items的下标\r\n     */\r\n    private setItem(p: cc.Vec3, dataIdx: number, itemIdx: number): void {\r\n        let item = this._items[itemIdx];\r\n        item.position = p;\r\n        let vi = item.getComponent(VirtualItem);\r\n        vi.dataIdx = dataIdx;\r\n        vi.args = this._list.argsArr[dataIdx];\r\n        vi.onRefresh(vi.args);\r\n\r\n        if (this._list.others.length > 0) {\r\n            let nodes: cc.Node[] = [];\r\n            this._otherItemsArr.forEach((e) => {\r\n                e[itemIdx].position = p;\r\n                nodes.push(e[itemIdx]);\r\n            });\r\n            vi.others = nodes;\r\n            vi.onRefreshOthers(...vi.others);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 激活新的节点，并添加到content下\r\n     * @param show 默认为true。false时不激活节点并添加进节点池中（仅在onInit中使用）\r\n     * @returns 激活的节点在this._items中的下标\r\n     */\r\n    private addItemNode(show: boolean = true): number {\r\n        let node: cc.Node = null;\r\n        if (this._itemPool.length > 0) {\r\n            node = this._itemPool.pop();\r\n            node.opacity = 255;\r\n            this._items.push(node);\r\n\r\n            this._otherItemPoolArr.forEach((e, i) => {\r\n                let otherNode = e.pop();\r\n                otherNode.opacity = 255;\r\n                this._otherItemsArr[i].push(otherNode);\r\n            });\r\n        } else {\r\n            let tmp: cc.Node | cc.Prefab = this._list.main.templateType === MainTemplateType.PREFAB ? this._list.main.templatePrefab : this._list.main.templateNode;\r\n            node = Res.instantiate(tmp, this.node);\r\n            if (!node.getComponent(VirtualItem)) {\r\n                node.addComponent(VirtualItem);\r\n            }\r\n            this.node.addChild(node);\r\n            if (show) {\r\n                node.opacity = 255;\r\n                this._items.push(node);\r\n            } else {\r\n                this.putItemNode(node);\r\n            }\r\n\r\n            // 拷贝一份子节点数组，防止子节点移除时改变下标\r\n            let childrenCopy = node.children.slice(0);\r\n            this._list.others.forEach((e, i) => {\r\n                let otherNode: cc.Node = null;\r\n                switch (e.templateType) {\r\n                    case OtherTemplateType.NODE:\r\n                        otherNode = Res.instantiate(e.templateNode, this.node);\r\n                        break;\r\n                    case OtherTemplateType.PREFAB:\r\n                        otherNode = Res.instantiate(e.templatePrefab, this.node);\r\n                        break;\r\n                    case OtherTemplateType.MAIN_ITEM_CHILD:\r\n                        if (!Tool.inRange(0, childrenCopy.length - 1, e.templateChild)) {\r\n                            cc.error(`[VirtualLayout.addItemNode] error e.templateChild: ${e.templateChild}`);\r\n                            return;\r\n                        }\r\n                        otherNode = childrenCopy[e.templateChild];\r\n                        otherNode.removeFromParent();\r\n                        break;\r\n                    default:\r\n                        cc.error(`[VirtualLayout.addItemNode] error e.templateType: ${e.templateType}`);\r\n                        return;\r\n                }\r\n                e.content.addChild(otherNode);\r\n                if (show) {\r\n                    otherNode.opacity = 255;\r\n                    this._otherItemsArr[i].push(otherNode);\r\n                } else {\r\n                    this.putItemNode(otherNode, true, i);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this._items.length - 1;\r\n    }\r\n\r\n    /**\r\n     * 将节点放入节点池\r\n     * @param node \r\n     * @param isOther 是否为Others下的节点\r\n     * @param otherIdx Others的下标\r\n     */\r\n    private putItemNode(node: cc.Node, isOther: boolean = false, otherIdx: number = 0): void {\r\n        node.opacity = 0;\r\n        // 防止已回收的节点触发点击事件\r\n        node.setPosition(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        if (isOther) {\r\n            this._otherItemPoolArr[otherIdx].push(node);\r\n        } else {\r\n            let vi = node.getComponent(VirtualItem);\r\n            vi.onReset();\r\n            this._itemPool.push(node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收已激活的节点\r\n     * @param index 节点在this._items中的下标\r\n     */\r\n    private putActivatedItemByIndex(index: number): void {\r\n        this.putItemNode(this._items[index]);\r\n        this._otherItemsArr.forEach((arr, otherIdx) => { this.putItemNode(arr[index], true, otherIdx); });\r\n\r\n        this._items.splice(index, 1);\r\n        this._otherItemsArr.forEach((arr) => {\r\n            arr.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 子节点坐标系下坐标转换为父节点坐标系下坐标\r\n     */\r\n    private convertToParentPos(pos: cc.Vec3, child: cc.Node): cc.Vec3 {\r\n        return pos.add(child.position);\r\n    }\r\n\r\n    /**\r\n     * 父节点坐标系下坐标转换为子节点坐标系下坐标\r\n     */\r\n    private convertToChildPos(pos: cc.Vec3, child: cc.Node): cc.Vec3 {\r\n        return pos.sub(child.position);\r\n    }\r\n\r\n    /**\r\n     * 获取节点自身坐标系下的节点边界矩形\r\n     */\r\n    private getNodeEdgeRect(node: cc.Node): cc.Rect {\r\n        return cc.rect(-node.width * node.anchorX, -node.height * node.anchorY, node.width, node.height);\r\n    }\r\n\r\n    /**\r\n     * 根据元素下标计算对应元素大小，isFixedSize为false时使用\r\n     * @param idx \r\n     */\r\n    private calcItemSizeUnfixed(idx: number): cc.Size {\r\n        if (this._list.calcItemSize) {\r\n            return this._list.calcItemSize(this._list.argsArr[idx]);\r\n        } else {\r\n            return this._fixedSize;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * content位移监听回调\r\n     */\r\n    private onPositionChanged(): void {\r\n        // ScrollView源码的bug处理\r\n        // 1.超出边界的差值会记录在_outOfBoundaryAmount里，但是这个_outOfBoundaryAmount不是每次检测边界时都更新的，它需要_outOfBoundaryAmountDirty为true才会更新\r\n        // 2.在content size改变的时候，ScrollView会检测content有没有超出边界，此时会更新_outOfBoundaryAmount并直接修改content坐标。但是修改完content坐标之后_outOfBoundaryAmount记录的仍旧是旧值，此时_outOfBoundaryAmountDirty为false。\r\n        // 3.ScrollView在touchend的时候会触发检测当前有没有超出边界，有的话自动回弹滚动。由于_outOfBoundaryAmountDirty为false，所以并未更新_outOfBoundaryAmount，而是直接取错误的_outOfBoundaryAmount作为超出边界的值，然后进行错误的自动回弹。\r\n        this._list.scrollView[\"_outOfBoundaryAmountDirty\"] = true;\r\n        // 更新标记\r\n        this._viewDirty = true;\r\n        this._posDirty = true;\r\n    }\r\n\r\n    /**\r\n     * view size监听回调\r\n     */\r\n    private onViewSizeChanged(): void {\r\n        this._viewEdge = this.getNodeEdgeRect(this._view);\r\n    }\r\n\r\n    /**\r\n     * 获取content相对view左上角原点位置的偏移值\r\n     * @param idx 元素下标\r\n     * @param itemAnchor 元素的锚点位置（左下角为0点）\r\n     * @param viewAnchor view的锚点位置（左下角为0点）\r\n     */\r\n    public getScrollOffset(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\r\n        idx = Math.min(idx, this._list.argsArr.length - 1);\r\n        return this._list.isFixedSize ? this.getScrollOffsetFixed(idx, itemAnchor, viewAnchor) : this.getScrollOffsetUnfixed(idx, itemAnchor, viewAnchor);\r\n    }\r\n\r\n    private getScrollOffsetFixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\r\n        let contentEdge = this.getNodeEdgeRect(this.node);\r\n        let xMax: number, xMin: number, yMax: number, yMin: number;\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                yMax = contentEdge.yMax - (this.top + idx * this.spacingY + this._fixedSize.height * idx);\r\n                yMin = yMax - this._fixedSize.height;\r\n            } else {\r\n                yMin = contentEdge.yMin + this.bottom + idx * this.spacingY + this._fixedSize.height * idx;\r\n                yMax = yMin + this._fixedSize.height;\r\n            }\r\n            let x = this._viewEdge.xMin - (contentEdge.xMin + this.node.x);\r\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\r\n            return cc.v2(x, y);\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                xMax = contentEdge.xMax - (this.right + idx * this.spacingX + this._fixedSize.width * idx);\r\n                xMin = xMax - this._fixedSize.width;\r\n            } else {\r\n                xMin = contentEdge.xMin + this.left + idx * this.spacingX + this._fixedSize.width * idx;\r\n                xMax = xMin + this._fixedSize.width;\r\n            }\r\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\r\n            let y = contentEdge.yMax - (this._viewEdge.yMax - this.node.y);\r\n            return cc.v2(x, y);\r\n        } else {\r\n            // 计算当前元素排在第几行第几列，从0开始\r\n            let rowIndex: number = 0;\r\n            let columnIndex: number = 0;\r\n            if (this.startAxis === AxisDirection.HORIZONTAL) {\r\n                let num = Math.floor((this.node.width - this.left - this.right + this.spacingX) / (this._fixedSize.width + this.spacingX));\r\n                num = Math.max(num, 1);\r\n                rowIndex = Math.floor(idx / num);\r\n                columnIndex = idx % num;\r\n            } else {\r\n                let num = Math.floor((this.node.height - this.top - this.bottom + this.spacingY) / (this._fixedSize.height + this.spacingY));\r\n                num = Math.max(num, 1);\r\n                rowIndex = idx % num;\r\n                columnIndex = Math.floor(idx / num);\r\n            }\r\n\r\n            if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                yMax = contentEdge.yMax - (this.top + rowIndex * this.spacingY + this._fixedSize.height * rowIndex);\r\n                yMin = yMax - this._fixedSize.height;\r\n            } else {\r\n                yMin = contentEdge.yMin + this.bottom + rowIndex * this.spacingY + this._fixedSize.height * rowIndex;\r\n                yMax = yMin + this._fixedSize.height;\r\n            }\r\n\r\n            if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                xMax = contentEdge.xMax - (this.right + columnIndex * this.spacingX + this._fixedSize.width * columnIndex);\r\n                xMin = xMax - this._fixedSize.width;\r\n            } else {\r\n                xMin = contentEdge.xMin + this.left + columnIndex * this.spacingX + this._fixedSize.width * columnIndex;\r\n                xMax = xMin + this._fixedSize.width;\r\n            }\r\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\r\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\r\n            return cc.v2(x, y);\r\n        }\r\n    }\r\n\r\n    private getScrollOffsetUnfixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\r\n        let contentEdge = this.getNodeEdgeRect(this.node);\r\n        let xMax: number, xMin: number, yMax: number, yMin: number;\r\n        let curSize: cc.Size = this.calcItemSizeUnfixed(idx);\r\n        if (this.type === LayoutType.VERTICAL) {\r\n            let totalHeight: number = 0;\r\n            for (let i = 0; i < idx; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                totalHeight += size.height;\r\n            }\r\n            if (this.verticalDirection === VerticalDirection.TOP_TO_BOTTOM) {\r\n                yMax = contentEdge.yMax - (this.top + idx * this.spacingY + totalHeight);\r\n                yMin = yMax - curSize.height;\r\n            } else {\r\n                yMin = contentEdge.yMin + this.bottom + idx * this.spacingY + totalHeight;\r\n                yMax = yMin + curSize.height;\r\n            }\r\n            let x = this._viewEdge.xMin - (contentEdge.xMin + this.node.x);\r\n            let y = contentEdge.yMax - (curSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\r\n            return cc.v2(x, y);\r\n        } else if (this.type === LayoutType.HORIZONTAL) {\r\n            let totalWidth: number = 0;\r\n            for (let i = 0; i < idx; i++) {\r\n                let size = this.calcItemSizeUnfixed(i);\r\n                totalWidth += size.width;\r\n            }\r\n            if (this.horizontalDirection === HorizontalDirection.RIGHT_TO_LEFT) {\r\n                xMax = contentEdge.xMax - (this.right + idx * this.spacingX + totalWidth);\r\n                xMin = xMax - curSize.width;\r\n            } else {\r\n                xMin = contentEdge.xMin + this.left + idx * this.spacingX + totalWidth;\r\n                xMax = xMin + curSize.width;\r\n            }\r\n            let x = curSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\r\n            let y = contentEdge.yMax - (this._viewEdge.yMax - this.node.y);\r\n            return cc.v2(x, y);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 重新排列\r\n     * @param clear 是否清空节点，默认true(仅当不会影响已有元素节点排列时才可传入false)\r\n     */\r\n    public rearrange(clear: boolean = true): void {\r\n        this._sizeDirty = true;\r\n        this._viewDirty = true;\r\n        if (clear) {\r\n            this._items.forEach((e, i) => {\r\n                this.putItemNode(e);\r\n                this._otherItemsArr.forEach((arr, otherIdx) => { this.putItemNode(arr[i], true, otherIdx); });\r\n            });\r\n            this._items.length = 0;\r\n            this._otherItemsArr.forEach((arr) => { arr.length = 0; });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新所有激活的item\r\n     */\r\n    public refreshAllItems(): void {\r\n        this._items.forEach((item) => {\r\n            let vi = item.getComponent(VirtualItem);\r\n            vi.onRefresh(vi.args);\r\n            if (this._list.others.length > 0) {\r\n                vi.onRefreshOthers(...vi.others);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}