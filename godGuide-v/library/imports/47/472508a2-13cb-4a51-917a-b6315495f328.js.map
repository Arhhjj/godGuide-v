{"version":3,"sources":["assets\\scripts\\animator\\core\\AnimatorParams.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ParamType } from \"./AnimatorCondition\";\r\n\r\n/**\r\n * 参数结构\r\n */\r\ninterface Param {\r\n    type: ParamType;\r\n    value: number;\r\n}\r\n\r\n/**\r\n * 状态机参数\r\n */\r\nexport default class AnimatorParams {\r\n    private _paramMap: Map<string, Param> = new Map();\r\n\r\n    constructor(dataArr: any[]) {\r\n        dataArr.forEach((data: any) => {\r\n            let param: Param = {\r\n                type: data.type,\r\n                value: data.init\r\n            };\r\n            this._paramMap.set(data.param, param);\r\n        });\r\n    }\r\n\r\n    public getParamType(key: string): ParamType {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param) {\r\n            return param.type;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public setNumber(key: string, value: number) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.NUMBER) {\r\n            param.value = value;\r\n        }\r\n    }\r\n\r\n    public setBool(key: string, value: boolean) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.BOOLEAN) {\r\n            param.value = value ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    public setTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            param.value = 1;\r\n        }\r\n    }\r\n\r\n    public resetTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            param.value = 0;\r\n        }\r\n    }\r\n\r\n    public autoTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            param.value = 1;\r\n        }\r\n    }\r\n\r\n    public resetAutoTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            param.value = 0;\r\n        }\r\n    }\r\n\r\n    public resetAllAutoTrigger() {\r\n        this._paramMap.forEach((param: Param, key: string) => {\r\n            if (param.type === ParamType.AUTO_TRIGGER) {\r\n                param.value = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    public getNumber(key: string): number {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.NUMBER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getBool(key: string): number {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.BOOLEAN) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getTrigger(key: string): number {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getAutoTrigger(key: string): number {\r\n        let param: Param = this._paramMap.get(key);\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n"]}