{"version":3,"sources":["assets\\scripts\\common\\cmpt\\shader\\ShaderTile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAmE,EAAE,CAAC,UAAU,EAA9E,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA,EAAE,iBAAiB,uBAAkB,CAAC;AAMvF;IAAwC,8BAAY;IAApD;QAAA,qEA2BC;QAzBU,WAAK,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnC,YAAM,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnC,UAAI,GAAgB,IAAI,CAAC;;IAqBrC,CAAC;IApBG,sBAAW,2BAAG;aAAd;YACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpE;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAES,0BAAK,GAAf;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,2BAAM,GAAhB;QACI,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEM,iCAAY,GAAnB;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACxG,CAAC;IAxBD;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,CAAC;6CACF;IAE1C;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,SAAS,EAAE,CAAC;8CACA;IAJ1B,UAAU;QAJ9B,OAAO;QACP,gBAAgB;QAChB,iBAAiB;QACjB,IAAI,CAAC,6BAA6B,CAAC;OACf,UAAU,CA2B9B;IAAD,iBAAC;CA3BD,AA2BC,CA3BuC,EAAE,CAAC,SAAS,GA2BnD;kBA3BoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, menu, disallowMultiple, executeInEditMode } = cc._decorator;\r\n\r\n@ccclass\r\n@disallowMultiple\r\n@executeInEditMode\r\n@menu(\"Framework/Shader/ShaderTile\")\r\nexport default class ShaderTile extends cc.Component {\r\n    @property({ tooltip: CC_DEV && \"uv坐标缩放倍数\" })\r\n    public scale: cc.Vec2 = new cc.Vec2(1, 1);\r\n    @property({ tooltip: CC_DEV && \"uv坐标偏移值\" })\r\n    public offset: cc.Vec2 = new cc.Vec2(0, 0);\r\n\r\n    private _mat: cc.Material = null;\r\n    public get mat(): cc.Material {\r\n        if (!this._mat) {\r\n            this._mat = this.getComponent(cc.RenderComponent).getMaterial(0);\r\n        }\r\n        return this._mat;\r\n    }\r\n\r\n    protected start(): void {\r\n        this.updateShader();\r\n    }\r\n\r\n    protected update(): void {\r\n        if (CC_EDITOR) {\r\n            this.updateShader();\r\n        }\r\n    }\r\n\r\n    public updateShader(): void {\r\n        this.mat.setProperty(\"tile\", new cc.Vec4(this.scale.x, this.scale.y, this.offset.x, this.offset.y));\r\n    }\r\n}\r\n"]}