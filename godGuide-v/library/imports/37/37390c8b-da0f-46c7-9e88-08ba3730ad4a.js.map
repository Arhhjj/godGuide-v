{"version":3,"sources":["assets\\scripts\\common\\cmpt\\ui\\scrollList\\VirtualItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAgC,EAAE,CAAC,UAAU,EAA3C,OAAO,aAAA,EAAE,gBAAgB,sBAAkB,CAAC;AAEpD;;GAEG;AAGH;IAAgE,+BAAY;IAA5E;QAAA,qEAoCC;QAnCG,aAAa;QACN,aAAO,GAAW,CAAC,CAAC;QAC3B,WAAW;QACJ,UAAI,GAAM,IAAI,CAAC;QACtB,6BAA6B;QACtB,YAAM,GAAc,EAAE,CAAC;;IA8BlC,CAAC;IA5BG;;;OAGG;IACI,+BAAS,GAAhB,UAAiB,IAAO;IACxB,CAAC;IAED;;;OAGG;IACI,qCAAe,GAAtB;QAAuB,eAAmB;aAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;YAAnB,0BAAmB;;IAC1C,CAAC;IAED;;;OAGG;IACI,6BAAO,GAAd;IACA,CAAC;IAED;;;OAGG;IACI,iCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAnCgB,WAAW;QAF/B,OAAO;QACP,gBAAgB;OACI,WAAW,CAoC/B;IAAD,kBAAC;CApCD,AAoCC,CApC+D,EAAE,CAAC,SAAS,GAoC3E;kBApCoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import { VirtualArgs } from \"./VirtualList\";\r\n\r\nconst { ccclass, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 虚拟列表的元素组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\nexport default class VirtualItem<T extends VirtualArgs> extends cc.Component {\r\n    /** 列表数据索引 */\r\n    public dataIdx: number = 0;\r\n    /** 列表数据 */\r\n    public args: T = null;\r\n    /** 分层的其余节点，顺序为Others数组的顺序 */\r\n    public others: cc.Node[] = [];\r\n\r\n    /**\r\n     * 根据数据刷新item显示\r\n     * @virtual\r\n     */\r\n    public onRefresh(args: T): void {\r\n    }\r\n\r\n    /**\r\n     * 在onRefresh之后调用，参数为分层显示的节点，参数顺序为Others数组的顺序\r\n     * @virtual\r\n     */\r\n    public onRefreshOthers(...nodes: cc.Node[]): void {\r\n    }\r\n\r\n    /**\r\n     * 回收item时重置内部状态\r\n     * @virtual\r\n     */\r\n    public onReset(): void {\r\n    }\r\n\r\n    /**\r\n     * 获取item显示当前数据所需的真实大小（若节点size会根据数据改变，请在此函数内返回准确的size）\r\n     * @virtual\r\n     */\r\n    public getRealSize(): cc.Size {\r\n        return this.node.getContentSize();\r\n    }\r\n}\r\n"]}