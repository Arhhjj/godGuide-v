{"version":3,"sources":["assets\\scripts\\common\\cmpt\\shader\\ShaderFill.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAmE,EAAE,CAAC,UAAU,EAA9E,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA,EAAE,iBAAiB,uBAAkB,CAAC;AAMvF;IAAwC,8BAAY;IAApD;QAAA,qEA4BC;QA1BU,eAAS,GAAa,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;QAErC,eAAS,GAAW,CAAC,CAAC;QAErB,UAAI,GAAgB,IAAI,CAAC;;IAsBrC,CAAC;IArBG,sBAAW,2BAAG;aAAd;YACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpE;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAES,0BAAK,GAAf;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,2BAAM,GAAhB;QACI,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEM,iCAAY,GAAnB;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAzBD;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;iDACI;IAE5C;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;iDACzB;IAJZ,UAAU;QAJ9B,OAAO;QACP,gBAAgB;QAChB,iBAAiB;QACjB,IAAI,CAAC,6BAA6B,CAAC;OACf,UAAU,CA4B9B;IAAD,iBAAC;CA5BD,AA4BC,CA5BuC,EAAE,CAAC,SAAS,GA4BnD;kBA5BoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, menu, disallowMultiple, executeInEditMode } = cc._decorator;\r\n\r\n@ccclass\r\n@disallowMultiple\r\n@executeInEditMode\r\n@menu(\"Framework/Shader/ShaderFill\")\r\nexport default class ShaderFill extends cc.Component {\r\n    @property({ tooltip: CC_DEV && \"填充颜色\" })\r\n    public fillColor: cc.Color = new cc.Color();\r\n    @property({ tooltip: CC_DEV && \"填充率\", range: [0, 1] })\r\n    public fillPhase: number = 0;\r\n\r\n    private _mat: cc.Material = null;\r\n    public get mat(): cc.Material {\r\n        if (!this._mat) {\r\n            this._mat = this.getComponent(cc.RenderComponent).getMaterial(0);\r\n        }\r\n        return this._mat;\r\n    }\r\n\r\n    protected start(): void {\r\n        this.updateShader();\r\n    }\r\n\r\n    protected update(): void {\r\n        if (CC_EDITOR) {\r\n            this.updateShader();\r\n        }\r\n    }\r\n\r\n    public updateShader(): void {\r\n        this.mat.setProperty(\"fillColor\", this.fillColor);\r\n        this.mat.setProperty(\"fillPhase\", this.fillPhase);\r\n    }\r\n}\r\n"]}