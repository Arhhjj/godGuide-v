{"version":3,"sources":["assets\\scripts\\animator\\AnimatorSpineSecondary.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA4C;AAC5C,oDAAoE;AAG9D,IAAA,KAAgD,EAAE,CAAC,UAAU,EAA3D,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,gBAAgB,sBAAA,EAAE,IAAI,UAAkB,CAAC;AAEpE;;GAEG;AAIH;IAAoD,0CAAY;IAAhE;QAAA,qEA4DC;QA3D6D,gBAAU,GAAW,CAAC,CAAC;QAEjF,WAAW;QACH,WAAK,GAAkB,IAAI,CAAC;QACpC,cAAc;QACN,YAAM,GAAgB,IAAI,CAAC;;IAsDvC,CAAC;IApDa,sCAAK,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,EAAE;YACpC,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxC;IACL,CAAC;IAED;;;;;;OAMG;IACI,uCAAM,GAAb;QAAc,cAAkH;aAAlH,UAAkH,EAAlH,qBAAkH,EAAlH,IAAkH;YAAlH,yBAAkH;;QAC5H,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,EAAE;YACnC,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,QAAQ,OAAb,IAAI,EAAa,IAAI,EAAE;QAEvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxC;IACL,CAAC;IAED;;;;;OAKG;IACO,8CAAa,GAAvB,UAAwB,QAAgB,EAAE,IAAa;QACnD,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC7D;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;IACL,CAAC;IA1DyD;QAAzD,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,uBAAuB,EAAE,CAAC;8DAAwB;IADhE,sBAAsB;QAH1C,OAAO;QACP,gBAAgB,CAAC,EAAE,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,2CAA2C,CAAC;OAC7B,sBAAsB,CA4D1C;IAAD,6BAAC;CA5DD,AA4DC,CA5DmD,sBAAY,GA4D/D;kBA5DoB,sBAAsB","file":"","sourceRoot":"/","sourcesContent":["import AnimatorSpine from \"./AnimatorSpine\";\r\nimport AnimatorBase, { AnimationPlayer } from \"./core/AnimatorBase\";\r\nimport AnimatorStateLogic from \"./core/AnimatorStateLogic\";\r\n\r\nconst { ccclass, property, requireComponent, menu } = cc._decorator;\r\n\r\n/** \r\n * Spine状态机组件（次状态机），同一节点可添加多个，用于在不同track中播放动画，trackIndex必须大于0\r\n */\r\n@ccclass\r\n@requireComponent(sp.Skeleton)\r\n@menu('Framework/Animator/AnimatorSpineSecondary')\r\nexport default class AnimatorSpineSecondary extends AnimatorBase {\r\n    @property({ tooltip: CC_DEV && '动画播放的trackIndex，必须大于0' }) trackIndex: number = 1;\r\n\r\n    /** 主状态机 */\r\n    private _main: AnimatorSpine = null;\r\n    /** spine组件 */\r\n    private _spine: sp.Skeleton = null;\r\n\r\n    protected start() {\r\n        if (!this.playOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this._spine = this.getComponent(sp.Skeleton);\r\n        this._main = this.getComponent(AnimatorSpine);\r\n        this._main.addSecondaryListener(this.onAnimFinished, this);\r\n\r\n        if (this.assetRawUrl !== null) {\r\n            this.initJson(this.assetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @override\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        if (this.playOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this.initArgs(...args);\r\n\r\n        this._spine = this.getComponent(sp.Skeleton);\r\n        this._main = this.getComponent(AnimatorSpine);\r\n        this._main.addSecondaryListener(this.onAnimFinished, this);\r\n\r\n        if (this.assetRawUrl !== null) {\r\n            this.initJson(this.assetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @override\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n        if (animName) {\r\n            this._spine.setAnimation(this.trackIndex, animName, loop);\r\n        } else {\r\n            this._spine.clearTrack(this.trackIndex);\r\n        }\r\n    }\r\n}\r\n"]}