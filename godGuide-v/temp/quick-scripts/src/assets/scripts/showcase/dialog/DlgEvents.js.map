{"version":3,"sources":["assets\\scripts\\showcase\\dialog\\DlgEvents.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAA2D;AAC3D,0DAAyD;AACzD,8CAAgD;AAChD,mDAAgF;AAChF,+CAA0C;AAEpC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAI5C;IAAuC,6BAAU;IAAjD;QAAA,qEAoBC;QAjBuB,UAAI,GAAa,IAAI,CAAC;;IAiB9C,CAAC;IAfiB,+BAAW,GAAzB;;;;4BACI,qBAAM,gBAAM,CAAC,SAAS,CAAC,qBAAS,CAAC,WAAW,EAAE,eAAe,CAAC,EAAA;;wBAA9D,SAA8D,CAAC;wBAC/D,gBAAM,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;;;;;KAChD;IAGa,8BAAU,GAAxB,UAAyB,GAAW;;;;;wBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;wBACvB,qBAAM,cAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAA;;wBAA5B,SAA4B,CAAC;;;;;KAChC;IAGO,8BAAU,GAAlB,UAAmB,GAAW;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;IAC3B,CAAC;IAlBa,cAAI,GAAW,YAAM,CAAC,aAAa,GAAG,WAAW,CAAC;IAE5C;QAAnB,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CAAuB;IAQ1C;QADC,qBAAY,CAAC,qBAAS,CAAC,WAAW,CAAC;+CAInC;IAGD;QADC,qBAAY,CAAC,qBAAS,CAAC,WAAW,CAAC;+CAGnC;IAnBgB,SAAS;QAF7B,OAAO;QACP,uBAAc,EAAE;OACI,SAAS,CAoB7B;IAAD,gBAAC;CApBD,AAoBC,CApBsC,oBAAU,GAoBhD;kBApBoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import DialogBase from \"../../common/cmpt/base/DialogBase\";\r\nimport { EventName } from \"../../common/const/EventName\";\r\nimport { DirUrl } from \"../../common/const/Url\";\r\nimport Events, { eventsOnEnable, preloadEvent } from \"../../common/util/Events\";\r\nimport Tool from \"../../common/util/Tool\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\n@eventsOnEnable()\r\nexport default class DlgEvents extends DialogBase {\r\n    public static pUrl: string = DirUrl.PREFAB_DIALOG + \"DlgEvents\";\r\n\r\n    @property(cc.Label) lab1: cc.Label = null;\r\n\r\n    private async onClickEmit() {\r\n        await Events.emitAsync(EventName.EVENT_TEST1, \"触发了事件1，请等待事件2\");\r\n        Events.emit(EventName.EVENT_TEST2, \"触发了事件2\");\r\n    }\r\n\r\n    @preloadEvent(EventName.EVENT_TEST1)\r\n    private async eventTest1(str: string) {\r\n        this.lab1.string = str;\r\n        await Tool.waitCmpt(this, 1);\r\n    }\r\n\r\n    @preloadEvent(EventName.EVENT_TEST2)\r\n    private eventTest2(str: string) {\r\n        this.lab1.string = str;\r\n    }\r\n}\r\n"]}