{"version":3,"sources":["assets\\scripts\\showcase\\dialog\\DlgShader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAA2D;AAC3D,sDAAiD;AACjD,kEAA6D;AAC7D,kEAA6D;AAC7D,8CAAgD;AAChD,iDAAqE;AAE/D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAuC,6BAAU;IAAjD;QAAA,qEAiCC;QA9ByB,UAAI,GAAe,IAAI,CAAC;QACxB,UAAI,GAAe,IAAI,CAAC;QAEtC,YAAM,GAAe,IAAI,CAAC;QAC1B,SAAG,GAAW,CAAC,CAAC;;IA0B5B,CAAC;IAxBG;;OAEG;IACI,0BAAM,GAAb;QAAA,iBASC;QARG,IAAI,CAAC,MAAM,GAAG,IAAI,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAW,CAAC;aAC1C,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC;aAC/B,MAAM,CAAC,IAAI,CAAC;aACZ,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,EAAE,CAAC;aAC3B,QAAQ,CAAC;YACN,KAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACjB,CAAC;IAES,0BAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,eAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAC9C,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;YACzB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,eAAK,CAAC,OAAO,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IA/Ba,cAAI,GAAW,YAAM,CAAC,aAAa,GAAG,WAAW,CAAC;IAE1C;QAArB,QAAQ,CAAC,oBAAU,CAAC;2CAAyB;IACxB;QAArB,QAAQ,CAAC,oBAAU,CAAC;2CAAyB;IAJ7B,SAAS;QAD7B,OAAO;OACa,SAAS,CAiC7B;IAAD,gBAAC;CAjCD,AAiCC,CAjCsC,oBAAU,GAiChD;kBAjCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import DialogBase from \"../../common/cmpt/base/DialogBase\";\r\nimport Timer from \"../../common/cmpt/base/Timer\";\r\nimport ShaderFill from \"../../common/cmpt/shader/ShaderFill\";\r\nimport ShaderTile from \"../../common/cmpt/shader/ShaderTile\";\r\nimport { DirUrl } from \"../../common/const/Url\";\r\nimport { Easing, SCALE_TWEEN, Tween } from \"../../common/util/Tween\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DlgShader extends DialogBase {\r\n    public static pUrl: string = DirUrl.PREFAB_DIALOG + \"DlgShader\";\r\n\r\n    @property(ShaderTile) tile: ShaderTile = null;\r\n    @property(ShaderFill) fill: ShaderFill = null;\r\n\r\n    private _tween: Tween<any> = null;\r\n    private _sx: number = 2;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    public onOpen() {\r\n        this._tween = new Tween(this.fill, SCALE_TWEEN)\r\n            .to({ fillPhase: [1, 0] }, 1000)\r\n            .repeat(1000)\r\n            .easing(Easing.Quadratic.In)\r\n            .onUpdate(() => {\r\n                this.fill.updateShader();\r\n            })\r\n            .start();\r\n    }\r\n\r\n    protected update() {\r\n        this.tile.scale.x += Timer.scaleDt * this._sx;\r\n        if (this.tile.scale.x >= 10) {\r\n            this._sx = -2;\r\n        } else if (this.tile.scale.x <= 1) {\r\n            this._sx = 2;\r\n        }\r\n        this.tile.offset.x -= Timer.scaleDt * 5;\r\n        this.tile.updateShader();\r\n    }\r\n}\r\n"]}