{"version":3,"sources":["assets\\scripts\\common\\util\\AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Tween } from \"./Tween\";\r\n\r\n/**\r\n * 音效类型\r\n */\r\nexport enum SfxType {\r\n    NORMAL,\r\n    UI\r\n}\r\n\r\n/**\r\n * 音频播放参数\r\n */\r\nexport interface AudioPlayArgs {\r\n    /** AudioClip */\r\n    clip: cc.AudioClip;\r\n    /** 是否循环，默认false */\r\n    loop?: boolean;\r\n    /** 音量渐变时长，单位s。默认0 */\r\n    fadeDuration?: number;\r\n    /** 播放结束的回调 */\r\n    finishCall?: () => void;\r\n}\r\n\r\n/**\r\n * Audio缓存数据\r\n */\r\ninterface AudioData {\r\n    /** audioID */\r\n    id: number;\r\n    /** 用于单独控制的音量 */\r\n    volume: number;\r\n    /** 音量渐变tween对象 */\r\n    tween: Tween<AudioData>;\r\n}\r\n\r\n/**\r\n * 单个AudioClip对应的sfx(音效)缓存数据\r\n */\r\ninterface SfxData {\r\n    /** 已缓存的音效数据数组 */\r\n    audioList: AudioData[];\r\n    /** 此音效最大同时播放的数量 */\r\n    maxNum: number;\r\n    /** 超过最大数量时是否stop未播完的音效并缓存新的音效 */\r\n    overStop: boolean;\r\n}\r\n\r\n/**\r\n * 音频管理类\r\n */\r\nexport default class AudioManager {\r\n    /** 缓存的bgm数据 */\r\n    private static _bgmMap: Map<cc.AudioClip, AudioData> = new Map();\r\n    /** 缓存的普通音效数据 */\r\n    private static _normalSfxMap: Map<cc.AudioClip, SfxData> = new Map();\r\n    /** 缓存的ui音效数据 */\r\n    private static _uiSfxMap: Map<cc.AudioClip, SfxData> = new Map();\r\n\r\n    private static _bgmVolume: number = 1;\r\n    /** 全局bgm音量 */\r\n    public static get bgmVolume(): number { return this._bgmVolume; }\r\n    public static set bgmVolume(volume: number) {\r\n        if (this._bgmVolume === volume) {\r\n            return;\r\n        }\r\n\r\n        this._bgmVolume = cc.misc.clampf(volume, 0, 1);\r\n        this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\r\n            cc.audioEngine.setVolume(audioData.id, this._bgmVolume * audioData.volume);\r\n        });\r\n    }\r\n\r\n    private static _sfxVolume: number = 1;\r\n    /** 全局sfx音量 */\r\n    public static get sfxVolume(): number { return this._sfxVolume; }\r\n    public static set sfxVolume(volume: number) {\r\n        if (this._sfxVolume === volume) {\r\n            return;\r\n        }\r\n\r\n        this._sfxVolume = cc.misc.clampf(volume, 0, 1);\r\n        this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n            data.audioList.forEach((audioData: AudioData) => {\r\n                cc.audioEngine.setVolume(audioData.id, this._sfxVolume * audioData.volume);\r\n            });\r\n        });\r\n        this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n            data.audioList.forEach((audioData: AudioData) => {\r\n                cc.audioEngine.setVolume(audioData.id, this._sfxVolume * audioData.volume);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _bgmOff: boolean = false;\r\n    /** bgm是否关闭 */\r\n    public static get bgmOff(): boolean { return this._bgmOff; }\r\n    public static set bgmOff(isOff: boolean) {\r\n        if (this._bgmOff === isOff) {\r\n            return;\r\n        }\r\n        this._bgmOff = isOff;\r\n\r\n        if (this._bgmOff) {\r\n            this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\r\n                this.stop(audioData);\r\n            });\r\n            this._bgmMap.clear();\r\n        }\r\n    }\r\n\r\n    private static _sfxOff: boolean = false;\r\n    /** sfx是否关闭 */\r\n    public static get sfxOff(): boolean { return this._sfxOff; }\r\n    public static set sfxOff(isOff: boolean) {\r\n        if (this._sfxOff === isOff) {\r\n            return;\r\n        }\r\n\r\n        this._sfxOff = isOff;\r\n        if (this._sfxOff) {\r\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    this.stop(audioData);\r\n                });\r\n                data.audioList.length = 0;\r\n            });\r\n            this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    this.stop(audioData);\r\n                });\r\n                data.audioList.length = 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    private static _bgmPause: boolean = false;\r\n    /** bgm是否暂停 */\r\n    public static get bgmPause(): boolean { return this._bgmPause; }\r\n    public static set bgmPause(isPause: boolean) {\r\n        if (this.bgmOff || this._bgmPause === isPause) {\r\n            return;\r\n        }\r\n        this._bgmPause = isPause;\r\n\r\n        this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\r\n            if (this._bgmPause) {\r\n                audioData.tween?.pause();\r\n                cc.audioEngine.pause(audioData.id);\r\n            } else {\r\n                audioData.tween?.resume();\r\n                cc.audioEngine.resume(audioData.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _sfxPause: boolean = false;\r\n    /** sfx是否暂停，暂停时不暂停ui音效 */\r\n    public static get sfxPause(): boolean { return this._sfxPause; }\r\n    public static set sfxPause(isPause: boolean) {\r\n        if (this.sfxOff || this._sfxPause === isPause) {\r\n            return;\r\n        }\r\n        this._sfxPause = isPause;\r\n\r\n        if (this._sfxPause) {\r\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    audioData.tween?.pause();\r\n                    cc.audioEngine.pause(audioData.id);\r\n                });\r\n            });\r\n        } else {\r\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    audioData.tween?.resume();\r\n                    cc.audioEngine.resume(audioData.id);\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 音量渐变\r\n     * @param data \r\n     * @param duration 音量渐变时长 单位s\r\n     * @param from 音量初始值\r\n     * @param to 音量目标值\r\n     * @param call 渐变结束的回调\r\n     */\r\n    private static volumeFade(data: AudioData, duration: number, from: number, to: number, call?: () => void): void {\r\n        data.tween?.stop();\r\n        data.volume = from;\r\n        cc.audioEngine.setVolume(data.id, data.volume * this.bgmVolume);\r\n        data.tween = new Tween(data)\r\n            .to({ volume: to }, duration * 1000)\r\n            .onUpdate(() => {\r\n                cc.audioEngine.setVolume(data.id, data.volume * this.bgmVolume);\r\n            })\r\n            .onComplete(() => {\r\n                data.tween = null;\r\n                if (call) {\r\n                    call();\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n    /**\r\n     * 停止音频\r\n     * @param audioData \r\n     */\r\n    private static stop(audioData: AudioData): void {\r\n        if (audioData.tween) {\r\n            audioData.tween.stop();\r\n            audioData.tween = null;\r\n        }\r\n        cc.audioEngine.stop(audioData.id);\r\n    }\r\n\r\n    /**\r\n     * 播放音频并返回AudioData\r\n     */\r\n    private static play(args: cc.AudioClip | AudioPlayArgs, volume: number, audioData: AudioData = null): AudioData {\r\n        let data: AudioPlayArgs = args instanceof cc.AudioClip ? { clip: args } : args;\r\n        if (!data.hasOwnProperty(\"loop\")) {\r\n            data.loop = false;\r\n        }\r\n        if (!data.hasOwnProperty(\"fadeDuration\")) {\r\n            data.fadeDuration = 0;\r\n        }\r\n        if (!data.hasOwnProperty(\"finishCall\")) {\r\n            data.finishCall = null;\r\n        }\r\n\r\n        if (audioData) {\r\n            audioData.id = cc.audioEngine.play(data.clip, data.loop, volume);\r\n            audioData.volume = 1;\r\n            if (audioData.tween) {\r\n                audioData.tween.stop();\r\n                audioData.tween = null;\r\n            }\r\n        } else {\r\n            audioData = {\r\n                id: cc.audioEngine.play(data.clip, data.loop, volume),\r\n                volume: 1,\r\n                tween: null\r\n            };\r\n        }\r\n\r\n        if (data.finishCall) {\r\n            cc.audioEngine.setFinishCallback(audioData.id, data.finishCall);\r\n        }\r\n        if (data.fadeDuration > 0) {\r\n            this.volumeFade(audioData, data.fadeDuration, 0, 1);\r\n        }\r\n        return audioData;\r\n    }\r\n\r\n    /**\r\n     * 播放bgm\r\n     */\r\n    public static playBgm(args: cc.AudioClip | AudioPlayArgs): void {\r\n        let clip = args instanceof cc.AudioClip ? args : args.clip;\r\n        if (this.bgmOff || !clip) {\r\n            return;\r\n        }\r\n\r\n        let audioData: AudioData = this._bgmMap.get(clip);\r\n        if (audioData === undefined) {\r\n            audioData = this.play(args, this.bgmVolume);\r\n            this._bgmMap.set(clip, audioData);\r\n        } else {\r\n            this.stop(audioData);\r\n            this.play(args, this.bgmVolume, audioData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放sfx\r\n     */\r\n    public static playSfx(args: cc.AudioClip | AudioPlayArgs, type: SfxType = SfxType.NORMAL): void {\r\n        let clip = args instanceof cc.AudioClip ? args : args.clip;\r\n        if (this.sfxOff || !clip) {\r\n            return;\r\n        }\r\n\r\n        let sfxData: SfxData = type === SfxType.NORMAL ? this._normalSfxMap.get(clip) : this._uiSfxMap.get(clip);\r\n        let audioData: AudioData = null;\r\n        if (sfxData === undefined) {\r\n            sfxData = this.setSfxData(clip, type);\r\n            audioData = this.play(args, this.sfxVolume);\r\n            sfxData.audioList.push(audioData);\r\n        } else {\r\n            // 剔除不处于播放状态的音频\r\n            while (sfxData.audioList.length > 0 && cc.audioEngine.getState(sfxData.audioList[0].id) !== cc.audioEngine.AudioState.PLAYING) {\r\n                this.stop(sfxData.audioList.shift());\r\n            }\r\n\r\n            // 已达到最大数量则剔除最先(第一个)缓存的音频\r\n            while (sfxData.overStop && sfxData.audioList.length >= sfxData.maxNum) {\r\n                this.stop(sfxData.audioList.shift());\r\n            }\r\n\r\n            // 缓存新的音频\r\n            if (sfxData.audioList.length < sfxData.maxNum) {\r\n                audioData = this.play(args, this.sfxVolume);\r\n                sfxData.audioList.push(audioData);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置音效数据（用于限制某些短时间内同时大量播放的音效）\r\n     * @param clip \r\n     * @param type 音效类型\r\n     * @param maxNum 此音效最大同时播放的数量\r\n     * @param overStop 超过最大数量时是否stop未播完的音效并缓存新的音效\r\n     */\r\n    public static setSfxData(clip: cc.AudioClip, type: SfxType = SfxType.NORMAL, maxNum: number = 8, overStop: boolean = false): SfxData {\r\n        if (!clip) {\r\n            return;\r\n        }\r\n\r\n        maxNum = Math.max(maxNum, 1);\r\n        let map = type === SfxType.NORMAL ? this._normalSfxMap : this._uiSfxMap;\r\n        let sfxData: SfxData = map.get(clip);\r\n        if (sfxData === undefined) {\r\n            sfxData = {\r\n                audioList: [],\r\n                maxNum: maxNum,\r\n                overStop: overStop\r\n            };\r\n            map.set(clip, sfxData);\r\n        } else {\r\n            sfxData.maxNum = maxNum;\r\n            sfxData.overStop = overStop;\r\n        }\r\n        return sfxData;\r\n    }\r\n\r\n    /**\r\n     * 停止bgm\r\n     * @param clip 需停止的音频，clip返回值为false则停止所有\r\n     * @param fadeDuration 音量渐变时长 单位s\r\n     */\r\n    public static stopBgm(clip: cc.AudioClip = null, fadeDuration: number = 0): void {\r\n        if (this.bgmOff) {\r\n            return;\r\n        }\r\n\r\n        if (clip) {\r\n            let audioData: AudioData = this._bgmMap.get(clip);\r\n            if (audioData === undefined) {\r\n                return;\r\n            }\r\n\r\n            if (fadeDuration <= 0) {\r\n                this.stop(audioData);\r\n                this._bgmMap.delete(clip);\r\n            } else {\r\n                this.volumeFade(audioData, fadeDuration, 1, 0, () => {\r\n                    this.stop(audioData);\r\n                    this._bgmMap.delete(clip);\r\n                });\r\n            }\r\n        } else {\r\n            if (fadeDuration <= 0) {\r\n                this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\r\n                    this.stop(audioData);\r\n                });\r\n                this._bgmMap.clear();\r\n            } else {\r\n                this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\r\n                    this.volumeFade(audioData, fadeDuration, 1, 0, () => {\r\n                        this.stop(audioData);\r\n                        this._bgmMap.delete(clip);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止sfx\r\n     * @param clip 需停止的音频，clip返回值为false则停止所有\r\n     * @param type 音效类型\r\n     */\r\n    public static stopSfx(clip: cc.AudioClip = null, type: SfxType = SfxType.NORMAL): void {\r\n        if (this.sfxOff) {\r\n            return;\r\n        }\r\n\r\n        if (clip) {\r\n            let data: SfxData = type === SfxType.NORMAL ? this._normalSfxMap.get(clip) : this._uiSfxMap.get(clip);\r\n            if (data === undefined || data.audioList.length <= 0) {\r\n                return;\r\n            }\r\n\r\n            data.audioList.forEach((audioData: AudioData) => {\r\n                this.stop(audioData);\r\n            });\r\n            data.audioList.length = 0;\r\n        } else {\r\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    this.stop(audioData);\r\n                });\r\n                data.audioList.length = 0;\r\n            });\r\n            this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\r\n                data.audioList.forEach((audioData: AudioData) => {\r\n                    this.stop(audioData);\r\n                });\r\n                data.audioList.length = 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止所有音频\r\n     */\r\n    public static stopAll(): void {\r\n        this.stopBgm();\r\n        this.stopSfx();\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音频\r\n     */\r\n    public static pauseAll(): void {\r\n        this.bgmPause = true;\r\n        this.sfxPause = true;\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音频\r\n     */\r\n    public static resumeAll(): void {\r\n        this.bgmPause = false;\r\n        this.sfxPause = false;\r\n    }\r\n\r\n    /**\r\n     * 停止所有音频，清除所有音频缓存\r\n     */\r\n    public static uncacheAll(): void {\r\n        this.stopAll();\r\n        this._bgmMap.clear();\r\n        this._normalSfxMap.clear();\r\n        this._uiSfxMap.clear();\r\n        cc.audioEngine.uncacheAll();\r\n    }\r\n}\r\n"]}