{"version":3,"sources":["assets\\scripts\\common\\cmpt\\ui\\res\\ResSprite.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAoC;AAE9B,IAAA,KAAwD,EAAE,CAAC,UAAU,EAAnE,OAAO,aAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA,EAAE,gBAAgB,sBAAkB,CAAC;AAE5E;;GAEG;AAKH;IAAuC,6BAAY;IAAnD;QAAA,qEA+CC;QA9CG,UAAU;QACF,YAAM,GAAoC,IAAI,CAAC;QAE/C,UAAI,GAAW,EAAE,CAAC;QAClB,eAAS,GAAW,EAAE,CAAC;QAEvB,aAAO,GAAc,IAAI,CAAC;;IAwCtC,CAAC;IAvCG,sBAAY,6BAAM;aAAlB;YACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,kCAAW;aAAtB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QACnC,CAAC;aACD,UAAuB,CAAiB;;YACpC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC,EAAE;gBAChD,OAAO;aACV;YACD,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,MAAM,GAAG;YACZ,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,GAAG;YACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QAChC,CAAC;;;OATA;IAWS,6BAAS,GAAnB;;QACI,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,GAAG;IAC1B,CAAC;IAED;;;;OAIG;IACU,kCAAc,GAA3B,UAA4B,GAAW,EAAE,GAAgB;QAAhB,oBAAA,EAAA,QAAgB;uCAAG,OAAO;;;;;wBAC/D,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;wBAChB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;wBACjB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC;wBACpC,KAAA,aAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;gCAAlB,wBAAkB;wBAAI,qBAAM,aAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAA;;8BAAzB,SAAyB;;;wBAAxD,MAAM,KAAkD;wBAC5D,2BAA2B;wBAC3B,IAAI,MAAM,YAAY,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE;4BACvE,IAAI,CAAC,WAAW,GAAG,MAAM,YAAY,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;yBAC7F;;;;;KACJ;IA9CgB,SAAS;QAJ7B,OAAO;QACP,gBAAgB;QAChB,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,0BAA0B,CAAC;OACZ,SAAS,CA+C7B;IAAD,gBAAC;CA/CD,AA+CC,CA/CsC,EAAE,CAAC,SAAS,GA+ClD;kBA/CoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import Res from \"../../../util/Res\";\r\n\r\nconst { ccclass, menu, disallowMultiple, requireComponent } = cc._decorator;\r\n\r\n/**\r\n * 精灵组件，自动管理资源的引用计数\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@requireComponent(cc.Sprite)\r\n@menu(\"Framework/UI组件/ResSprite\")\r\nexport default class ResSprite extends cc.Component {\r\n    // 动态加载的资源\r\n    private _asset: cc.SpriteFrame | cc.SpriteAtlas = null;\r\n\r\n    private _url: string = \"\";\r\n    private _atlasKey: string = \"\";\r\n\r\n    private _sprite: cc.Sprite = null;\r\n    private get sprite(): cc.Sprite {\r\n        if (!this._sprite) {\r\n            this._sprite = this.getComponent(cc.Sprite);\r\n        }\r\n        return this._sprite;\r\n    }\r\n\r\n    public get spriteFrame(): cc.SpriteFrame {\r\n        return this.sprite.spriteFrame;\r\n    }\r\n    public set spriteFrame(v: cc.SpriteFrame) {\r\n        if (!this.isValid || this.sprite.spriteFrame === v) {\r\n            return;\r\n        }\r\n        v?.addRef();\r\n        this._asset?.decRef();\r\n        this._asset = v;\r\n        this.sprite.spriteFrame = v;\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this._asset?.decRef();\r\n    }\r\n\r\n    /**\r\n     * 加载并设置spriteFrame\r\n     * @param url 图片或图集路径，规则同Res加载路径\r\n     * @param key 如果需要加载的url为图集时，需传入图集的key\r\n     */\r\n    public async setSpriteFrame(url: string, key: string = \"\"): Promise<void> {\r\n        this._url = url;\r\n        this._atlasKey = key;\r\n        let type = key ? cc.SpriteAtlas : cc.SpriteFrame;\r\n        let result = Res.get(url, type) || await Res.load(url, type);\r\n        // 如短时间内多次调用，需保证显示最新一次加载的资源\r\n        if (result instanceof type && this._url === url && this._atlasKey === key) {\r\n            this.spriteFrame = result instanceof cc.SpriteAtlas ? result.getSpriteFrame(key) : result;\r\n        }\r\n    }\r\n}\r\n"]}