{"version":3,"sources":["assets\\scripts\\common\\cmpt\\ui\\i18n\\I18nSprite.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAAqD;AACrD,+CAAkE;AAClE,2CAAoD;AACpD,8CAAyC;AAEnC,IAAA,KAAsC,EAAE,CAAC,UAAU,EAAjD,OAAO,aAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAkB,CAAC;AAM1D;IAAwC,8BAAY;IAApD;QAAA,qEA8CC;QA7CW,aAAO,GAAc,IAAI,CAAC;QAC1B,eAAS,GAAW,EAAE,CAAC;;IA4CnC,CAAC;IA1CG,sBAAW,gCAAQ;QADnB,UAAU;aACV,cAAgC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxD,UAAoB,CAAS;YACzB,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;gBACtB,OAAO;aACV;YACD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;;;OAPuD;IAS9C,2BAAM,GAAhB;QACI,IAAI;YACA,cAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAS,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;aACjD;SACJ;QAAC,OAAO,GAAG,EAAE;YACV,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACjB;IACL,CAAC;IAGM,iCAAY,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,QAAQ,cAAI,CAAC,OAAO,EAAE;YAClB,KAAK,eAAQ,CAAC,EAAE;gBACZ,GAAG,GAAG,6BAA6B,CAAC;gBACpC,MAAM;YACV,KAAK,eAAQ,CAAC,EAAE;gBACZ,GAAG,GAAG,6BAA6B,CAAC;gBACpC,MAAM;YACV;gBACI,OAAO;SACd;QACD,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAlBD;QADC,qBAAY,CAAC,qBAAS,CAAC,qBAAqB,CAAC;kDAmB7C;IA7CgB,UAAU;QAJ9B,OAAO;QACP,qBAAY,EAAE;QACd,gBAAgB,CAAC,mBAAS,CAAC;QAC3B,IAAI,CAAC,2BAA2B,CAAC;OACb,UAAU,CA8C9B;IAAD,iBAAC;CA9CD,AA8CC,CA9CuC,EAAE,CAAC,SAAS,GA8CnD;kBA9CoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { EventName } from \"../../../const/EventName\";\r\nimport { eventsOnLoad, preloadEvent } from \"../../../util/Events\";\r\nimport I18n, { LangType } from \"../../../util/I18n\";\r\nimport ResSprite from \"../res/ResSprite\";\r\n\r\nconst { ccclass, menu, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@eventsOnLoad()\r\n@requireComponent(ResSprite)\r\n@menu(\"Framework/I18N/I18nSprite\")\r\nexport default class I18nSprite extends cc.Component {\r\n    private _sprite: ResSprite = null;\r\n    private _imageKey: string = \"\";\r\n    /** 图片名 */\r\n    public get imageKey(): string { return this._imageKey; }\r\n    public set imageKey(v: string) {\r\n        if (this._imageKey === v) {\r\n            return;\r\n        }\r\n        this._imageKey = v;\r\n        this.updateSprite();\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        try {\r\n            I18n.init();\r\n\r\n            this._sprite = this.getComponent(ResSprite);\r\n            if (this._sprite.spriteFrame) {\r\n                this.imageKey = this._sprite.spriteFrame.name;\r\n            }\r\n        } catch (err) {\r\n            cc.error(err);\r\n        }\r\n    }\r\n\r\n    @preloadEvent(EventName.UPDATE_LOCALIZED_CMPT)\r\n    public updateSprite(): void {\r\n        if (!this.imageKey) {\r\n            return;\r\n        }\r\n\r\n        let url = \"\";\r\n        switch (I18n.curLang) {\r\n            case LangType.ZH:\r\n                url = \"textures/localizedImage/zh/\";\r\n                break;\r\n            case LangType.EN:\r\n                url = \"textures/localizedImage/en/\";\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        url += this.imageKey;\r\n        this._sprite.setSpriteFrame(url);\r\n    }\r\n}\r\n"]}