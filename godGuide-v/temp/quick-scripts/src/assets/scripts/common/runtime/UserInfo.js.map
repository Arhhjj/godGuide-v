{"version":3,"sources":["assets\\scripts\\common\\runtime\\UserInfo.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Singleton from \"../cmpt/base/Singleton\"\n\n// 属性装饰器：用于添加get和set方法\nfunction GetSet(target: any, propertyKey: string) {\n    Object.defineProperty(target, propertyKey, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            return this[`_${propertyKey}`];\n        },\n        set: function (value: any) {\n            this[`_${propertyKey}`] = value;\n        },\n    });\n}\n\n/**用户数据类 */\nexport default class UserInfo extends Singleton {\n    static get instance() {\n        return super.getInstance<UserInfo>()\n    }\n\n    private _userName: string = \"\" //用户名称\n    @GetSet userName: string\n\n    private _coin: number = 0 //金币\n    @GetSet coin: number\n\n    private _levelProgress: number = 1\n    @GetSet levelProgress: number\n\n    private _signInDays: number = 0\n    @GetSet signInDays: number\n\n    private _lastSignInDate: any = null\n    @GetSet lastSignInDate: any\n\n    private _propConfig: number[] = []\n    @GetSet propConfig: number[]\n\n    private _roleConfig: number[] = []\n    @GetSet roleConfig: number[]\n\n\n    /**初始化初始数据内容结构 */\n    public initUserInfo() {\n        this.userName = \"Ar\"\n        this.coin = 1000\n        this.levelProgress = 1\n        this.signInDays = 0\n        this.lastSignInDate = null\n        this.propConfig = [1, 1, 1, 1]\n        this.roleConfig = [1107, 150, 580, 220]\n\n        // const _levelsInfo: ILevelsInfo[] = Array.from({ length: LEVEL_NUM }, (_, index) => ({\n        //     id: index + 1,\n        //     status: ELevelStatus.NONE,\n        // }));\n        // this.levelsInfo = _levelsInfo\n    }\n\n    /**设置用户数据 */\n    public setUserInfo(data) {\n        if (!data) return\n        Object.assign(this, data)\n    }\n\n    /**获取用户数据 */\n    public getUserInfo() {\n        const data = {\n            userName: this.userName,\n            coin: this.coin,\n            levelProgress: this.levelProgress,\n            signInDays: this.signInDays,\n        }\n        return data\n    }\n}\n\n/**用户数据本地存储 */\nexport class UserInfoStorge {\n    /**本地数据key */\n    private static key: string = \"userInfo\"\n\n    /**储存数据 */\n    public static setUserInfo(value: any = UserInfo.instance.getUserInfo(), key = this.key) {\n        cc.sys.localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    /**获取数据 */\n    public static getUserInfo(key = this.key) {\n        return JSON.parse(cc.sys.localStorage.getItem(key))\n    }\n\n    /**清除用户的本地数据 */\n    public static clearUserInfo(key = this.key) {\n        cc.sys.localStorage.removeItem(key)\n    }\n\n    /**新增用户数据 -- value只包含新增的内容 */\n    public static addUserInfo(value: any, key = this.key) {\n        const userInfo = this.getUserInfo(key)\n        if (userInfo) {\n            const addUserInfo = { ...userInfo, ...value }\n            this.setUserInfo(addUserInfo, key)\n        }\n    }\n\n    /**是否存在本地数据 */\n    public static hasUserInfo(key = this.key) {\n        return cc.sys.localStorage.getItem(key) !== null\n    }\n\n    /**删除指定的本地数据 */\n    public static removeUserInfo(key: string) {\n        cc.sys.localStorage.removeItem(key)\n    }\n\n    /**获取所有本地数据 */\n    public static getAllUserInfo() {\n        const userInfo = []\n        for (let i = 0; i < cc.sys.localStorage.length; i++) {\n            const key = cc.sys.localStorage.key(i)\n            if (key.startsWith(this.key)) {\n                const value = JSON.parse(cc.sys.localStorage.getItem(key))\n                userInfo.push(value)\n            }\n        }\n        return userInfo\n    }\n\n} \n"]}